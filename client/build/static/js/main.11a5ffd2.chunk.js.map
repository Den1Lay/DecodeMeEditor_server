{"version":3,"sources":["serviceWorker.js","utils/notification.js","utils/mineInd.js","utils/boostWorker.js","utils/webWorker.js","utils/index.js","store/reducers/main.js","store/reducers/user.js","store/reducers/index.js","store/index.js","core/axios.js","actions/main.js","core/api/auth.js","actions/network.js","core/socket.js","components/Input/index.jsx","components/Pod/index.jsx","components/Button/index.jsx","components/Mentions/index.jsx","components/Answers/index.jsx","components/AccessSelect/index.jsx","components/AddToCompadre/index.jsx","components/ArtPart/index.jsx","components/BoxImage/index.jsx","components/Leaf/index.jsx","components/Directions/index.jsx","components/CheckTags/index.jsx","containers/Notes/index.jsx","containers/Main/elements/Editor.jsx","containers/Main/elements/Project.jsx","containers/Main/elements/Version.jsx","containers/Main/elements/Social.jsx","containers/Main/Profile/index.jsx","containers/Main/index.jsx","containers/Navbar/elements/Branch.jsx","containers/Navbar/elements/Main.jsx","containers/Navbar/elements/Social.jsx","containers/Navbar/index.jsx","containers/Branch/index.jsx","containers/Login/index.jsx","containers/Map/index.jsx","pages/Base/index.jsx","index.js"],"names":["Boolean","window","location","hostname","match","openNotification","type","message","description","notification","mineInd","source","etalon","key","mod","i","Array","isArray","base","keyPath","slice","length","shift","natSource","this","addEventListener","ev","data","console","log","superData","boost","maxPath","grid","arrOfFunc","isModif","isBoost","branch","context","choses","choseCount","sery","findAndSet","path","pos","height","push","funcArr","map","checker","bind","promiseLessSeries","split","every","el","then","fill","reverse","postMessage","updater","WebWorker","worker","code","toString","blob","Blob","pass","URL","createObjectURL","Worker","upFirstSimbol","word","toUpperCase","substring","defState","format","Date","projectsCoordsData","projects","workPerson","workPCD","workBranch","mapStore","mapGrid","mapCurrent","availablePayload","users","personObj","friends","mainPlace","date","nickname","avatar","lastProject","combineReducers","main","state","action","payload","random","returnError","v","checkBottomData","successMove","workVersion","question","reduxHistory","wayId","v4","versionId","projectId","name","access","superAccess","unshift","superId","versions","comment","master","illustrations","ways","color","wayDirection","branchDirection","coord","label","picture","src","alt","firstVSId","concat","userData","myLastProject","projectInd","checkId","target","store","forEach","id","includes","kicked","superKicked","newObservers","newEditord","localStorage","token","applicantList","filter","address","connected","dls","person","friendInd","friendV","versionInd","realProjectInd","realVersionInd","pathReducer","pcdInd","updateWithDeleteWorkDirFlag","splice","nickName","newIllust","PCDInd","event","all","myId","accessCopy","superAccessCopy","freshCopy","freshSuperCopy","accessV","personId","project","myNickName","newIllustration","sender","dataExample","dataClone","FastClone","factory","newVersionInd","PCDFactory","mainPart","artsDesription","answers","artSrc","selectedType","realWorkBranch","currentHeight","updateAnswers","content","ref","isNewBranch","hasOwnProperty","ans","zeroBase","firstPart","secondPart","newCurrentHeight","isFriend","some","workFriendInd","restartData","firstVersionId","workHeight","wPCDInd","chooseProjectFlag","projectsCoordInd","deepFriendInd","lastMyProjectInFriend","time","timeEnd","lastPerson","lockInd","Math","user","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","next","axios","defaults","baseURL","headers","common","sendErrors","post","addProject","openPlace","addFriend","changeBranch","changeMaster","choosePerson","accessControl","updateData","dataInit","socket","io","transports","on","dispatch","getState","fsID","fnN","lastV","subscribe","freshState","pcd","avPayload","emit","projectData","InputBase","width","place","placeholder","changeHandler","value","readOnly","style","onChange","className","classNames","Pod","actived","onPlus","onDelete","onChoose","showDelete","onAction","onClick","stopPropagation","deleteHandl","DeleteOutlined","PlusOutlined","rows","ButtonBase","children","clickHandler","isCircle","disabled","shape","MentionsBase","row","TabPane","Tabs","Answers","setAnswers","setActiveKey","Events","addProps","arr","closable","remove","targetKey","newActiveKey","newPanes","workInd","panes","activeKey","add","wayColor","questionChangeHandl","refChangeHandl","persist","refData","onEdit","pane","tab","margin","Option","Select","connect","defData","isCreate","isSuper","options","superIdToNick","supers","nicks","sup","mode","defaultValue","optionLabelProp","AddToCompadre","projectCount","onAdd","ArtPart","Tag","CheckableTag","Upload","Dragger","mentionsHandler","fileHandler","unsetIllust","setIllust","removeIllust","useState","workPlace","setWorkPlace","checkTabsProps","firstVal","firstHandler","secondVal","secondHandler","checkData","placement","title","onConfirm","okText","cancelText","display","htmlFor","FileAddOutlined","fontSize","marginBottom","cursor","showSearch","BoxImage","wrapperRef","useRef","pictureRef","sizes","setSizes","workSrc","setWorkSrc","restart","setRestart","show","setShow","useEffect","current","pH","naturalHeight","pW","naturalWidth","wH","offsetHeight","wW","offsetWidth","opacity","Leaf","connects","originBoost","neighbourBoost","bottom","top","getConnects","Directions","branchHandler","wayHandler","checkTagsProps","CheckTags","checked","Notes","accessed","superAccessed","targetAccess","paths","savePod","setIllustrations","wayObj","setSelectedType","setData","checkHeight","checkPath","checkCoord","setCheckCoord","saveState","setSaveState","currentPath","checkV","dataSource","newAnswers","noMaster","eventHandl","cb","cWayDirection","formData","FormData","workFile","files","dataType","newName","append","workIllust","personSId","res","isSetup","versionComment","isOwner","setupProject","saveVersion","setProjectData","versionData","setVersionData","getSuperId","superIdArr","nick","deleteHandler","AccessSelect","nickNames","addVersion","L","fL","updateUsers","previewPerson","cleanApplicantList","setPerson","personDetail","setPersonDetail","setUsers","newComrade","setNewComrade","newUsers","comrades","availableProjects","addCompadreHandl","friendObj","onSelect","userInd","logOut","component","setComponent","newPayload","Navbar_Branch","demo_projects","checkAccess","accesses","selectProject","selectVersion","undefined","makeMenu","addHandler","selectHandl","itemsArr","Item","justifyContent","flexDirection","overlay","onVisibleChange","chooseMe","avatarComp","me","friend","mySuperId","addPod","deletePod","choosePod","resData","realResData","podAction","fetchUserData","Promise","resolve","reject","JSON","parse","err","userLogin","auth","reqData","status","msg","catch","autoLoginWithToken","er","login","fakeData","password","workPos","setMapData","setMain","boostWorker","natVersion","onmessage","line","h","oldCoord","newCoord","l","oH","oL","nH","nL","cloneElement","fallback","ReactDOM","render","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.11a5ffd2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {notification} from 'antd'\r\n\r\nconst openNotification = ({type, message, description}) => {\r\n  notification[type]({\r\n    message,\r\n    description\r\n  });\r\n}\r\n\r\nexport default openNotification","function mineInd(source, etalon, key, mod) {\r\n  for(let i in source) {\r\n    const natSource = i => {\r\n        key = Array.isArray(key) ? key : [key]\r\n        let base = source[i];\r\n        let keyPath = key.slice();\r\n        while(keyPath.length) {\r\n          base = base[keyPath.shift()];\r\n        }\r\n        return base;\r\n    }\r\n    if(natSource(i) === etalon) {\r\n      mod[0] = i\r\n    }\r\n  }\r\n};\r\n\r\nexport default mineInd","// Здесь дата преврашается (впечатывается) из ветвистой структуры объекта в 2ух мерный массив\r\n// Происходит это в 2 этапа: 1ый - рекурсивныей серийник, который пропускает через себя объект и накидывает\r\n// Буст (высоту элемента в сетке массива):\r\n// 2ой этап это создание пустого массива на основе инфы по макс высоте и длине -->\r\n// повторный обход даты и модифицирование this.grid на основе локальныйх данных переключение режимов через \r\n// флаги isBoost, isModif\r\n\r\n// Код более чем производителен.\r\nexport default function () {\r\n  this.addEventListener(\"message\", function(ev) {\r\n    if(!ev) return;\r\n    debugger\r\n    class TreeRecer {\r\n      constructor(data) {\r\n        console.log(\"INSIDE:\",data)\r\n        this.superData = data; // источник даты, которые модифится, \r\n        this.boost = 0;\r\n        this.maxPath = '';\r\n        this.grid = []; // просто плаг\r\n      }\r\n  \r\n      promiseLessSeries(arrOfFunc) { // последовательный вызов (Хз чего я боюсь, просто с этим спокойней)\r\n        let i = 0;\r\n        while(i < arrOfFunc.length) {\r\n          arrOfFunc[i]();\r\n          i++;\r\n        }\r\n      };\r\n      async checker(isModif, isBoost, data = this.superData) { // проверяет есть ли в дате вопросы\r\n        // и действует в зависимости от ситуации)\r\n        ///debugger\r\n        let branch = data.branch; \r\n        let context = this;\r\n        let choses = branch.choseCount; // число вопросов в ветке.\r\n        let sery = []; // здесь собираются функции.\r\n        let i = 0\r\n\r\n        isModif && this.findAndSet({path: data.pos, height: branch.boost, data})\r\n\r\n        if(choses !== 0) { // если есть вопросы, то создается новыя серия(данные по адрессам вопрос)\r\n          // и прогоняетяс через чекер\r\n          while(i < choses) {\r\n            sery.push(branch['q'+i])\r\n            i++\r\n          }\r\n          let funcArr = sery.map((branch, i) => {\r\n            return function() {\r\n              this.checker(isModif, isBoost, branch)\r\n            }.bind(context)\r\n          });\r\n          this.promiseLessSeries(funcArr) // проход в другие ветки\r\n\r\n          isBoost && (() => { // поиск исключения нижней ветки (она всегда прежата ко дну) \r\n            if(data.pos.split('').every(el => el===\"0\")) { // check if this bottom\r\n              branch.boost = 0;\r\n            } else { // прокидывание буста в те позиции, где есть есть вопросы ---> зависимость от центрального элемента\r\n              branch.boost = branch['q'+~~((choses%2===0 ? (choses-1) : choses)/2)].branch.boost;\r\n            };\r\n          })()\r\n\r\n\r\n        } else { // наткнулся на ласт элемент, в котором нет вопроса, просто база\r\n        \r\n          isBoost && (() => { // \r\n            branch['boost'] = this.boost; // стандартный буст\r\n            this.boost++;\r\n            if(this.maxPath.length < data.pos.length) { // проверка на максимальную длину ветки\r\n              this.maxPath = data.pos\r\n            }\r\n          })()\r\n          //console.log(this)\r\n        };\r\n        \r\n      }\r\n  \r\n      updater() {\r\n        this.checker(false, true).then(() => {\r\n          // создание сетки на основе предельных данных this.boost (высота) и this.maxPath (ширина)\r\n          this.grid = Array(this.boost).fill('').map(() => []).map(() => Array(this.maxPath.length).fill('').map(() => ({data: null})));\r\n          debugger\r\n          this.checker(true, false).then(() => {\r\n            this.grid = this.grid.reverse();\r\n\r\n            postMessage({grid: this.grid})\r\n          })\r\n        })\r\n          \r\n      }\r\n\r\n      findAndSet({path, height, data}) {\r\n        this.grid[+height][path.length-1].data = data;\r\n      }\r\n    }\r\n\r\n    new TreeRecer(ev.data).updater()\r\n\r\n    //console.log(\"MAP_EV:\", ev)\r\n    //new TreeRecer({})\r\n\r\n  })\r\n}\r\n\r\n","export default class WebWorker {\r\n  constructor(worker) {\r\n    const code = worker.toString();\r\n    const blob = new Blob([\"(\" + code + \")()\"]);\r\n    const pass = URL.createObjectURL(blob);\r\n    return new Worker(pass);\r\n  }\r\n}\r\n","export {default as openNotification} from './notification'\r\nexport {default as mineInd} from './mineInd'\r\nexport {default as boostWorker} from './boostWorker'\r\nexport {default as WebWorker} from './webWorker'\r\n\r\nexport const upFirstSimbol = word => word[0].toUpperCase()+word.substring(1);","// Возможно тебе пригодится это когда ты вернешься спустя какое то время.. Проведи его АХУЕНННО!!\r\n// Рабочий процесс крутиться вокруг переменной workBranch, которая за счет модицирования project позволят редактировать ВСЕ\r\n// Главное это правильно выделить ее из нужно проекта, в этом тебе помогут mineInd и pathReducer. В дальнейшем рабочая вертка \r\n// взаимодействует с ProjectsCoordsData, из которой так же выделяется рабочий объект на основании прошлых проектов, юзеров.\r\n// Этот рабочий объект ответсвеннен за рабочую ветку и высоту. PCD хранит в себе данных проектов ВСЕХ Юзеров к которым ты притрагивался\r\n// При работе на акке друга детаются новые данные и происходит привязка к его комнате с последующей прослушкой всех его действий\r\n// отлавливанием их сокетами в core и модификацией... \r\n// Все данные имеют обратную совместимость так что баги с невозможностью найти индекс не должные происходить...\r\n// Только специально обрабатываемые.. при удалении.. Тоесть только 90 % таких событий должно быть отловлено в INIT подобных событиях\r\n// Не подгорай :)\r\n\r\n// Логика сеттеров начала прижимать фундаментальную диспатчевую логику. О БАЛ ДЕТЬ. смотри на работу илююстраций\r\n\r\n// Эффектная логика (обновление PCD( внутри person также), проектов, новые версии, проекты\r\n// setup(access), а также состояние мастера) просходит за счет накидывания приставок к workVersion.v\r\n// Новые версии отлавливаются и фильтруются, с последующими вызовами сокет эвентов.\r\n// Они же отлавливаются уже на сервере и там проиходит обновленние данных юзера уже в users.json. Много эвентов\r\n// производят обратный вызов, которые отлавливаются всеми кто в комнате. (нами тоже(филтрятся через sender))\r\n// \r\n\r\nimport {format, startOfWeek} from 'date-fns';\r\nimport {v4} from 'uuid'\r\nimport FastClone from 'fastest-clone'\r\nimport {mineInd, openNotification} from '@/utils'\r\n\r\nconst projectsCoordData = [\r\n  {\r\n    projectId: 'uuid11',\r\n    workVersion: \"uuid12\",\r\n    \"uuid12\": {\r\n      path: \"0\",\r\n      height: 0\r\n    }\r\n  }\r\n]\r\n// просто манекены..\r\n// обновлять персон обжект здесь или получать новый с сервера... (я беру с сервера..) ..почистить код\r\nconst projects = [{\r\n  name: \"QWE\",  \r\n  description: \"QWE\",\r\n  superId: 'uuidentificator',\r\n  lastVersion: 0, // proj v || wb v\r\n  versions: [{\r\n  comment: 'Init',\r\n  date: format(new Date(), \"yyyy-MM-dd\"),\r\n  superId: 'uuid12',\r\n  master: 'NickName',\r\n  ways: [{wayId: 'uuv4maybe', wayDirection: 'Way to the other side of the river', color: 'black'}],\r\n  data: {\r\n    pos: \"0\",\r\n    wayId: 'uuv4maybe',\r\n    branch: {\r\n    branchDirection: '',\r\n    base: [{\r\n      coord: {\r\n        path: \"0\",\r\n        height: 0\r\n      },\r\n      label: '',\r\n      main: '',\r\n      comment: '',\r\n      picture: {\r\n        src: null,\r\n        alt: ''\r\n      }\r\n    }],\r\n    question: false,\r\n    choseCount: 0,\r\n    }\r\n  }\r\n}]}]\r\n\r\nconst defState = {\r\n  projectsCoordsData: [], // набор джентельмена\r\n  projects: false,\r\n  workPerson: null,\r\n  workPCD: null,\r\n  workBranch: null,\r\n  // currentBranch: \"0\",\r\n  // currentProject: 0,\r\n  // currentVersion: 0, // Кибер прах, помянем\r\n  // currentHeight: 0,\r\n  // workProject: 0,\r\n  mapStore: [],\r\n  mapGrid: [],  //Мап ресы\r\n  mapCurrent: '',\r\n  availablePayload: null,\r\n  users: [], // all exist users\r\n  personObj: null, // Всегда можно найти себя по этому адресу..\r\n  friends: [],\r\n  mainPlace: 'editor', // project save\r\n}\r\nlet date = format(new Date(), \"yyyy-MM-dd\"); \r\nexport default (state = defState, action) => {\r\n  const {type, payload, random} = action;\r\n  function updatPersonObj() {\r\n    if(state.workPerson === state.personObj.userData.superId) {\r\n      state.personObj.projects = state.projects;\r\n      state.personObj.projectsCoordsData = state.projectsCoordsData;\r\n    }\r\n  }\r\n  // Псевдо мидл\r\n  if(type !== 'CHANGE_BRANCH') { // DESTROY DIRTY MAP FIELDS, BECAUSE WE NEED FRESH\r\n    /// сделать сравние более лояльным может даже функцию с свичем замутить.\r\n    state.mapStore = [];\r\n    state.mapGrid = [];\r\n    state.mapCurrent = [];\r\n  }\r\n\r\n  (() => {\r\n    //const StateFactory = FastClone.factory(state);\r\n    if(!Array.isArray(window.reduxHistory)) {\r\n      window.reduxHistory = []\r\n    }\r\n    window.reduxHistory.push({\r\n      //state: new StateFactory(state), Он просто критически капризный \r\n      // картина будет восстанавливаться по Тайпам и пейлоадам...\r\n      type,\r\n      payload,\r\n    })\r\n  })()\r\n\r\n  function returnError () {\r\n    state.workBranch = {};\r\n    state.workPCD = null;\r\n    state.workBranch.branch = {};\r\n    state.mainPlace = 'error';\r\n    state.workBranch.v = random;\r\n  }\r\n\r\n  function checkBottomData (successMove) {\r\n    if(state.workPCD[state.workPCD.workVersion].height === 'question') {\r\n      // Check exist question\r\n      if(state.workBranch.branch.question) {\r\n        successMove()\r\n        //state.mainPlace = 'editor'\r\n      } else {\r\n        returnError();\r\n      } \r\n    } else {\r\n      // Check exist pod...\r\n      if(state.workBranch.branch.base?.[state.workPCD[state.workPCD.workVersion].height] ?? false) {\r\n        successMove()\r\n        //state.mainPlace = 'editor'\r\n      } else {\r\n        returnError();\r\n      }\r\n    }\r\n  }\r\n\r\n  switch(type) {\r\n  \r\n    // И как интегрировать мидл???\r\n    case 'ADD_PROJECT': //wb.v\r\n    //disavaible middleware модификация pcd..\r\n\r\n      return (() => {\r\n        debugger\r\n        const wayId = v4(),\r\n        versionId = 'v'+v4(),\r\n        projectId = 'p'+v4(),\r\n        {name, description, access, superAccess} = payload;\r\n        state.projects.unshift({\r\n          name,  \r\n          description,\r\n          superId: projectId, \r\n          access,\r\n          superAccess,\r\n          versions: [{\r\n          comment: 'Init',\r\n          date,\r\n          superId: versionId,\r\n          master: null,\r\n          illustrations: [],\r\n          ways: [{wayId, color: 'green', wayDirection: ''}],\r\n          data: {\r\n            pos: \"0\",\r\n            wayId,\r\n            branch: {\r\n            branchDirection: '',\r\n            base: [{\r\n              coord: {\r\n                path: \"0\",\r\n                height: \"0\"\r\n              },\r\n              label: '',\r\n              main: '',\r\n              comment: '',\r\n              picture: {\r\n                src: null,\r\n                alt: ''\r\n              }\r\n            }],\r\n            question: false,\r\n            choseCount: 0,\r\n            }\r\n          }\r\n        }]});\r\n        let firstVSId = state.projects[0].versions[0].superId;\r\n        state.workPCD = {\r\n          projectId: state.projects[0].superId,\r\n          workVersion: firstVSId,\r\n          [firstVSId]: {\r\n            path: \"0\",\r\n            height: \"0\"\r\n          }\r\n        };\r\n        state.projectsCoordsData = [state.workPCD].concat(state.projectsCoordsData);\r\n        state.workBranch = state.projects[0].versions[0].data;\r\n        state.personObj.userData.myLastProject = state.projects[0].superId;\r\n        state.mainPlace = 'editor';\r\n        state.workBranch.v = 'n'+random;\r\n\r\n        //ТОТ САМЫЙ ОТДЕЛЬНЫЙ ХЕНДЛЕР\r\n        //updatPersonObj()\r\n          return {\r\n            ...state,\r\n          }\r\n      })();\r\n    case 'SETUP_PROJECT':\r\n      debugger\r\n      return (() => {\r\n        console.log(payload)\r\n        const {name, description, access, superAccess} = payload\r\n\r\n        let projectInd;\r\n        for(let i in state.projects) {\r\n          if(state.projects[i].superId === state.workPCD.projectId) {\r\n            projectInd = i;\r\n          }\r\n        };\r\n        function checkId(source, target, store) {\r\n          source.forEach(id => {\r\n            if(!target.includes(id)) {\r\n              store.push(id)\r\n            }\r\n          })\r\n        }\r\n        let kicked = [];\r\n        let superKicked = [];\r\n        let newObservers = [];\r\n        let newEditord = [];\r\n        // let all = [];\r\n        // let superAll = [];\r\n        checkId(state.projects[projectInd].access, access, kicked);\r\n        checkId(state.projects[projectInd].superAccess, superAccess, superKicked);\r\n        checkId(access, state.projects[projectInd].access, newObservers);\r\n        checkId(superAccess, state.projects[projectInd].superAccess, newEditord);\r\n       \r\n        state.projects[projectInd] = {...state.projects[projectInd], name, description, access, superAccess};\r\n        state.workBranch.v = 's'+random;\r\n        state.mainPlace = 'editor';\r\n\r\n        return {\r\n          ...state,\r\n          kicked,\r\n          superKicked,\r\n          newObservers,\r\n          newEditord\r\n        }\r\n      })()\r\n\r\n    case 'LOGOUT': \r\n      return (() => {\r\n        delete localStorage.token;\r\n        return {\r\n          projectsCoordsData: [],\r\n          projects: false,\r\n          workPerson: null,\r\n          workPCD: null,\r\n          workBranch: null,\r\n          mapStore: [],\r\n          mapGrid: [],  //Мап ресы\r\n          mapCurrent: '',\r\n          availablePayload: null,\r\n          users: [], // all exist users\r\n          personObj: null, // Всегда можно найти себя по этому адресу..\r\n          friends: [],\r\n          mainPlace: 'editor', // project save\r\n        }\r\n      })()\r\n    case 'OPEN_PLACE': \r\n      return {\r\n        ...state,\r\n        mainPlace: payload\r\n      }\r\n    case 'CLEAN_APPLICANT_LIST':\r\n      return (() => {\r\n        debugger\r\n        //payload = superId;\r\n        state.personObj.userData.applicantList = state.personObj.userData.applicantList.filter(({superId}) => superId !== payload)\r\n        console.log(state.personObj.userData.applicantList);\r\n        return state\r\n      })()\r\n    case 'UPDATE_APPLICANT_LIST': // updateApplicantList\r\n      return (() => {\r\n        //payload = user || obj.userData\r\n        state.personObj.userData.applicantList.push(payload);\r\n        return {\r\n          ...state\r\n        }\r\n      })()\r\n    case 'UPDATE_DATA': \r\n      // {payload, address, dlsInfo} = payload\r\n      debugger\r\n      // ВСЕ ЭТИ ВЕЩИ МОГУТ ОТРАБОТАТЬ ПРИ КОМНАТЕ ВЫБОРА... \r\n      // Я НЕ ОБНОВЛЯЮ этот стафф. просто произвожу повторный запрос, если есть Подтверждающий клик.    \r\n      // прослушка своего объекта не прекращается!!! --> проводишь обновления\r\n\r\n      // А что будет, если ты отключишься \r\n      // Вся логика UPDATE даты построена вокруг того, что ТЫ сейчас работаешь над ним, и\r\n      // и что сейчас ты находишься в рабочем юзере.. ----> При переключении проекты меняются и куда \r\n      // улетят эти данные (никуда, индекс не найдется) не известно... Поэтому обновление данные происходит только в лайв\r\n      // режиме. А переключение на себя будет происходить только после гетта полного стека свежих данных.\r\n      \r\n      // больше не делай таких вредных обработчиков\r\n      return (() => { \r\n        let {data, address, dls} = payload;\r\n        let connected = state.workPerson === data.person \r\n        // рефакторни это место. поиски можно вынести наверх\r\n        switch(address) {\r\n          case 'friend': //  отрабатывает при пике юзера в социальном компоненте \r\n            (() => {\r\n              let {userData, projects} = data;\r\n              let friendInd = [];\r\n              mineInd(state.friends, userData.superId, ['userData','superId'], friendInd);\r\n              state.friends[friendInd[0]].projects = projects;\r\n              state.friendV = random;\r\n            })()\r\n          break;\r\n          case 'projects':\r\n            (() => {\r\n            })()\r\n          break;\r\n          case 'new_version': \r\n            connected && (() => {\r\n              const {projectId, workVersion} = data;\r\n\r\n              let projectInd = [];\r\n              mineInd(state.projects, projectId, 'superId', projectInd);\r\n              state.projects[projectInd[0]].versions.push(workVersion);\r\n              state.workBranch.v = random;\r\n            })()\r\n          break\r\n          case 'versions':\r\n            connected && (() => {\r\n\r\n              // нужно чекать есть что рендерить, или нужно дропать ошибку тут.\r\n\r\n              let {person, projectId, versionId, workVersion} = data\r\n              // Если ты находишь в другом проекте или версии...\r\n              // update version;\r\n              let projectInd = [];\r\n              mineInd(state.projects, projectId, 'superId', projectInd);\r\n\r\n              let versionInd = [];\r\n              mineInd(state.projects[projectInd[0]].versions, versionId, 'superId', versionInd);\r\n\r\n              state.projects[projectInd[0]].versions[versionInd[0]].data = workVersion; \r\n              // нужно ли обновлять workBranch? Da\r\n              let realProjectInd = [];\r\n              mineInd(state.projects, state.workPCD.projectId, 'superId', realProjectInd);\r\n              let realVersionInd = [];\r\n              mineInd(state.projects[realProjectInd[0]].versions, state.workPCD.workVersion, 'superId', realVersionInd);\r\n              state.workBranch = state.projects[realProjectInd[0]].versions[realVersionInd[0]].data;\r\n\r\n              let path = state.workPCD[state.workPCD.workVersion].path.substring(1);\r\n              state.workBranch.v = random;\r\n              pathReducer(path, state);\r\n\r\n              // Проверка на то, что в новой дате, есть данные, с координатами, работающего PCD \r\n              // Если нет, то выбрасывается ошибка, хотя можно сделать куда мягче, но это уже на rebuild \r\n              \r\n\r\n              let pcdInd = [];\r\n              mineInd(state.projectsCoordsData, state.workPCD.projectId, 'proojectId', pcdInd);\r\n              \r\n              if(state.workBranch !== 'None') {\r\n                debugger\r\n                localStorage.updateWithDeleteWorkDirFlag = 'false'\r\n                checkBottomData(() => {localStorage.updateWithDeleteWorkDirFlag = 'true'}); //SUCCESS MOVE not fail\r\n                debugger\r\n                if(localStorage.updateWithDeleteWorkDirFlag !== 'true') {\r\n                  state.projectsCoordsData.splice(pcdInd[0], 1);\r\n                  state.lastProject = null;\r\n                  state.workBranch.v = 'c'+random;\r\n                }\r\n              } else {\r\n                returnError()\r\n                state.projectsCoordsData.splice(pcdInd[0], 1);\r\n                state.lastProject = null;\r\n                state.workBranch.v = 'c'+random;\r\n              } \r\n\r\n              \r\n            })()\r\n          break;\r\n          case 'available': \r\n          connected && (() => {\r\n            // ПРодумай как фильтрить это..\r\n            let {person, workPCD, pass} = data; // Хаю хай тут баг, кста, когда чел будет в комнате выбора, \r\n            // он может получить этот вызов и ничего не обновить... Безотказная система падет.\r\n            // можно обходить это простой проверкой на рабочего чела, который добывается в персоне сверху\r\n            let projectInd = [];\r\n            mineInd(state.projects, workPCD.projectId, 'superId', projectInd);\r\n    \r\n            let versionInd = [];\r\n            mineInd(state.projects[projectInd[0]].versions, workPCD.workVersion, 'superId', versionInd);\r\n            if(state.projects[projectInd[0]].versions[versionInd[0]].master !== state.personObj.userData.nickName) {\r\n              state.projects[projectInd[0]].versions[versionInd[0]].master = pass;\r\n            }\r\n           \r\n            \r\n            \r\n          })()\r\n          break;\r\n          // картинки должны находится в версии а не в проекте.. \r\n          case 'illustrations':\r\n          connected && (() => {\r\n            let {newIllust, action, workPCD} = data\r\n            let projectInd = [];\r\n            mineInd(state.projects, workPCD.projectId, 'superId', projectInd);\r\n\r\n            let versionInd = [];\r\n            mineInd(state.projects[projectInd[0]].versions, workPCD.workVersion, 'superId', versionInd);\r\n\r\n            switch(action) {\r\n              case 'ADD':\r\n              state.projects[projectInd[0]].versions[versionInd[0]].illustrations.push(newIllust);\r\n              break\r\n              case 'REMOVE': \r\n              state.projects[projectInd[0]].versions[versionInd[0]].illustrations = state.projects[projectInd[0]].versions[versionInd[0]].illustrations.filter(({src}) => src !== newIllust.src);\r\n              break\r\n            }\r\n            console.log('%c%s', 'color: pink; font-size: 24px;', 'UPDATED_ILLUS:', state.projects[projectInd[0]].versions[versionInd[0]].illustrations)\r\n          })()\r\n          break;\r\n          case 'delete': \r\n          connected && (() => {\r\n            \r\n            const {workPCD, target} = data;\r\n            let projectInd = [];\r\n            mineInd(state.projects, workPCD.projectId, 'superId', projectInd);\r\n\r\n            let PCDInd = [];\r\n            mineInd(state.projectsCoordsData, workPCD.projectId, 'projectId', PCDInd);\r\n            if(target === 'project') {\r\n              state.projects.splice(projectInd[0], 1);\r\n              state.projectsCoordsData.splice(PCDInd[0], 1);\r\n\r\n            } else {\r\n              debugger\r\n              // в будущем отловить исключение и сделать подхват существующих версий. \r\n              // А если удаляется последняяя версия, то удаляется проект. Это чекается в рекдакторе версии\r\n              // проще всего полностью снести PCD. потом просто репикнуть. С мапой это на изи делается.\r\n              \r\n              let versionInd = [];\r\n              mineInd(state.projects[projectInd[0]].versions, workPCD.workVersion, 'superId', versionInd);\r\n              state.projects[projectInd[0]].versions.splice(versionInd[0], 1);\r\n              state.projectsCoordsData.splice(PCDInd[0], 1);\r\n              // прочекать подъем проекта и версий в PCD.\r\n            }\r\n\r\n            // перебрасывать и удаялять PCD если рабочий проект тот же\r\n            // иначе все остается на месте, просто появится пушка об удалении\r\n\r\n            if(state.workPCD.projectId === workPCD.projectId) {\r\n              state.workBranch = {}; // модификафии адресованы к .branch. хотя, что?\r\n              state.workBranch.branch = {};\r\n              state.workPCD = null;\r\n              state.mainPlace = 'error';\r\n            }\r\n            state.workBranch.v = random\r\n          })()\r\n          break\r\n          default:\r\n        }\r\n        return state;\r\n      })();\r\n    case 'ACCESS_CONTROL': \r\n      //{event, pass} = payload\r\n      //{projectId, superId} = pass \r\n      debugger\r\n      return (() => {\r\n        const {event, pass: {projectId, superId, all}} = payload;  // superId отправителя.\r\n        // all - false, asBase \r\n        // Если алл тру, значит сейчас коннект с другим челом, который заредачил all, и этот ивент прилетел именно на его адрес,\r\n        // и включился по этому.\r\n        if(state.personObj.userData.superId === superId) {\r\n          return state\r\n        };\r\n        let friendInd = [];\r\n        mineInd(state.friends, superId, ['userData', 'superId'], friendInd);\r\n        let projectInd = [];\r\n        mineInd(state.friends[friendInd[0]].projects, projectId, 'superId', projectInd);\r\n        const myId = state.personObj.userData.superId;\r\n        let accessCopy = state.friends[friendInd[0]].projects[projectInd[0]].access.slice();\r\n        let superAccessCopy = state.friends[friendInd[0]].projects[projectInd[0]].superAccess.slice();\r\n        switch(event) {\r\n          case 'NEW':\r\n          if(!accessCopy.includes(myId) && !accessCopy.includes('all')) {\r\n            openNotification({type: 'success', message: \"New access\", description: `From ${payload.pass.nickName}`})\r\n          }\r\n          state.friends[friendInd[0]].projects[projectInd[0]].access.push(all ? 'all' : myId);\r\n          break\r\n\r\n          case 'NEW_SUPER':\r\n          if(!superAccessCopy.includes(myId) && !superAccessCopy.includes('all')) {\r\n            openNotification({type: 'success', message: \"New super access\", description: `From ${payload.pass.nickName}`})\r\n          }\r\n          state.friends[friendInd[0]].projects[projectInd[0]].superAccess.push(all ? 'all' : myId);\r\n          break\r\n\r\n          case 'KICK':\r\n          state.friends[friendInd[0]].projects[projectInd[0]].access = all\r\n          ? accessCopy.filter(id => id !== 'all')\r\n          : accessCopy.filter(id => id !== myId);\r\n          let freshCopy = state.friends[friendInd[0]].projects[projectInd[0]].access;\r\n          if(!freshCopy.includes(myId) && !freshCopy.includes('all')) {\r\n            openNotification({type: 'warning', message: \"Lose access\", description: `From ${payload.pass.nickName}`})\r\n          }\r\n          if(state.workPerson === superId) {\r\n\r\n          }\r\n          break\r\n\r\n          case 'SUPER_KICK':\r\n          state.friends[friendInd[0]].projects[projectInd[0]].superAccess = all\r\n          ? superAccessCopy.filter(id => id !== 'all')\r\n          : superAccessCopy.filter(id => id !== myId);\r\n          let freshSuperCopy = state.friends[friendInd[0]].projects[projectInd[0]].access;\r\n          if(!freshSuperCopy.includes(myId) && !freshSuperCopy.includes('all')) {\r\n            openNotification({type: 'warning', message: \"Lose super access\", description: `From ${payload.pass.nickName}`})\r\n          } \r\n          if(state.workPerson === superId) {\r\n            // принять меры которые вводят ограничения на редактирование, если \r\n          }\r\n          \r\n          break\r\n          default:\r\n            \r\n        }\r\n        state.accessV = random;\r\n        return state\r\n      })();\r\n    case 'NEW_FRIEND_PROJECT': // DISP LOGIN, guest side\r\n      return (() => {\r\n        const {personId, project} = payload;\r\n        let friendInd = [];\r\n        mineInd(state.friends, personId, ['userData', 'superId'], friendInd);\r\n        state.friends[friendInd[0]].projects.push(project);\r\n        state.friendV = random;\r\n        state.workBranch.v = random;\r\n        return state;\r\n      })()\r\n    case 'CHANGE_MASTER':\r\n      debugger\r\n      return state.workPCD\r\n      ? (() => {\r\n        let projectInd = [];\r\n          mineInd(state.projects, state.workPCD.projectId, 'superId', projectInd);\r\n          let versionInd = [];\r\n          mineInd(state.projects[projectInd[0]].versions, state.workPCD.workVersion, 'superId', versionInd);\r\n        \r\n          if(payload) { // setMe\r\n            let myNickName = state.personObj.userData.nickName\r\n            state.projects[projectInd[0]].versions[versionInd[0]].master = myNickName;\r\n            state.availablePayload = myNickName;\r\n            state.workBranch.v = 'a'+random;\r\n          } else { // unsetMe\r\n            if(state.projects[projectInd[0]].versions[versionInd[0]].master === state.personObj.userData.nickName) {\r\n              state.projects[projectInd[0]].versions[versionInd[0]].master = null;\r\n              state.availablePayload = null;\r\n              state.workBranch.v = 'a'+random;\r\n            }\r\n            \r\n            \r\n          }\r\n        \r\n        return state\r\n      })()\r\n      : state\r\n\r\n    case 'SET_ILLUSTRATIONS':  // этот элемент вызывается юзером на прямую.\r\n      return (() => {\r\n        const {newIllustration, action, sender, projectId} = payload;\r\n        let projectInd = [];\r\n        mineInd(state.projects, state.workPCD.projectId, 'superId', projectInd);\r\n\r\n        let versionInd = [];\r\n        mineInd(state.projects[projectInd[0]].versions, state.workPCD.workVersion, 'superId', versionInd);\r\n\r\n          switch(action) {\r\n            case 'ADD': \r\n            state.projects[projectInd[0]].versions[versionInd[0]].illustrations.push(newIllustration);\r\n            break;\r\n            case 'REMOVE': \r\n            state.projects[projectInd[0]].versions[versionInd[0]].illustrations = state.projects[projectInd[0]].versions[versionInd[0]].illustrations.filter(({src}) => src !== newIllustration.src);\r\n            break\r\n          }\r\n          state.workBranch.v = 'i'+random;\r\n        return state\r\n      })()\r\n      case 'SET_MAP_DATA':\r\n        return (() => {\r\n          const {mapGrid, mapStore, mapCurrent} = payload;\r\n          return {\r\n            ...state, mapGrid, mapStore, mapCurrent\r\n          };\r\n        })()\r\n    // case 'OPEN_PROJECT_CREATOR': \r\n    //   return {\r\n    //     ...state,\r\n    //     mainPlace: 'project'\r\n    //   }\r\n    // case 'OPEN_VERSIONS_EDITOR':  //openVersionsEditor\r\n    //   return {\r\n    //     ...state,\r\n    //     mainPlace: 'version'\r\n    //   }\r\n    // case 'OPEN_PROJECT_SETUP': \r\n    //   return {\r\n    //     ...state, \r\n    //     mainPlace: 'setup'\r\n    //   }\r\n    case 'ADD_VERSION':\r\n    // допилить кода сюда и коммитнуть\r\n    return (() => {\r\n      // пройдись с дебагером тут\r\n      // debugger\r\n      // delete state.workBranch;\r\n\r\n      //DEBAG SPACE\r\n      // let testObj = {txt: \"yes\", obj: {insTxt: \"insTxt\"}, arr: ['super']};\r\n      // let cloneFactory = FastClone.factory(testObj);\r\n      // let testObjClone = cloneFactory(testObj)\r\n      //DEBAG SPACE\r\n\r\n      let projectInd = [];\r\n      mineInd(state.projects, state.workPCD.projectId, 'superId', projectInd)\r\n\r\n      let versionInd = [];\r\n      mineInd(state.projects[projectInd[0]].versions, state.workPCD.workVersion, 'superId', versionInd)\r\n      // DATA EXAMPLE IS LAST VERSION;\r\n      let dataExample = state.projects[projectInd[0]].versions[versionInd[0]].data;\r\n\r\n      let DataFactory = FastClone.factory(dataExample);\r\n      let dataClone = new DataFactory(dataExample);\r\n      // debugger\r\n      const {illustrations} = state.projects[projectInd[0]].versions[versionInd[0]];\r\n\r\n      let newVersionInd = 'v'+v4();\r\n      state.projects[projectInd[0]].versions.push({\r\n        comment: payload.comment,\r\n        date,\r\n        superId: newVersionInd,\r\n        master: null,\r\n        //ways,\r\n        illustrations,\r\n        data: dataClone\r\n      });\r\n\r\n      let PCDInd = [];\r\n      mineInd(state.projectsCoordsData, state.workPCD.projectId, 'projectId', PCDInd);\r\n      \r\n      let PCDFactory = FastClone.factory(state.workPCD[state.workPCD.workVersion]);\r\n      \r\n      state.projectsCoordsData[PCDInd[0]][newVersionInd] = new PCDFactory(state.workPCD[state.workPCD.workVersion]); // точечное копирование???\r\n      state.projectsCoordsData[PCDInd[0]].workVersion = newVersionInd;\r\n      \r\n      //delete state.workPCD;\r\n      state.workPCD = state.projectsCoordsData[PCDInd[0]];\r\n\r\n      state.workBranch = state.projects[projectInd[0]].versions[state.projects[projectInd[0]].versions.length-1].data; \r\n      let path = state.workPCD[state.workPCD.workVersion].path.substring(1);\r\n      pathReducer(path, state);\r\n\r\n      state.workBranch.v = 'v'+random;\r\n      state.mainPlace = 'editor';\r\n      return state\r\n    })()\r\n    case 'NEW_FRIEND_VERSION':\r\n      return (() => {\r\n\r\n        return state\r\n      })()\r\n    case 'SAVE_POD': //wb.v\r\n    debugger\r\n    return (() => {\r\n      // Доделать этот компонент.\r\n      // Интегрировать новую дату: PathDirection на уровне версии, потом пройтись по всему и прокомментить\r\n      console.log('PAYLOD:', payload);\r\n      const {data: {label, mainPart, comment, artsDesription, branchDirection, wayDirection, answers, artSrc}, selectedType} = payload;\r\n      \r\n      let realWorkBranch = state.workBranch.branch;\r\n      let currentHeight = state.workPCD[state.workPCD.workVersion].height;\r\n\r\n      const updatePod = () => {\r\n        realWorkBranch.base[currentHeight] = {\r\n          coord: {\r\n            path: state.workBranch.pos,\r\n            height: currentHeight\r\n          },\r\n          label,\r\n          main: mainPart,\r\n          comment,\r\n          picture: {\r\n            src: artSrc,\r\n            alt: artsDesription\r\n          }\r\n        }\r\n      };\r\n\r\n      // здесь происходит модифицирование описания рабочего вея не зависимо вопрос это или под\r\n\r\n      // let etalonWay = state.workBranch.wayId;\r\n      // let projectInd = [];\r\n      // mineInd(state.projects, state.workPCD.projectId, 'superId', projectInd)\r\n\r\n      // let versionInd = [];\r\n      // mineInd(state.projects[projectInd[0]].versions, state.workPCD.workVersion, 'superId', versionInd)\r\n\r\n      // let etalonWayInd = [];\r\n      // mineInd(state.projects[projectInd[0]].versions[versionInd[0]].ways, etalonWay, 'wayId', etalonWayInd);\r\n\r\n      // state.projects[projectInd[0]].versions[versionInd[0]].ways[etalonWayInd[0]].wayDirection = wayDirection;\r\n\r\n      const updateAnswers = () => {\r\n        debugger\r\n        answers.forEach(({content, key, ref}) => { // wayColor, wayId\r\n          console.log(typeof key);\r\n\r\n          //!!! пройдись с дебаггером. Но все должно быть хорошо. Нельзя просто так переставлять элементы.\r\n          // -> последовательность сохранится\r\n\r\n          const isNewBranch = !realWorkBranch.hasOwnProperty('q'+key);\r\n          realWorkBranch['q'+key] = isNewBranch\r\n          ? {\r\n            ans: content,\r\n            pos: state.workBranch.pos+key,\r\n            //wayId,\r\n            branch: {\r\n              branchDirection: '',\r\n              base: [\r\n                {\r\n                  coord: {\r\n                    path: state.workBranch.pos+key,\r\n                    height: \"0\"\r\n                  },\r\n                  label: '',\r\n                  main: '',\r\n                  comment: '',\r\n                  picture: {\r\n                    src: null,\r\n                    alt: ''\r\n                  }\r\n                }\r\n              ], // сделать красиво\r\n              question: false,\r\n              choseCount: 0,\r\n              ref: ref.length === 0 ? false : ref,\r\n              }\r\n            }\r\n          : {...realWorkBranch['q'+key], ans: content} // wayId\r\n          // if(isNewBranch) {\r\n          //   state.projects[projectInd[0]].versions[versionInd[0]].ways.push({wayId, color: wayColor, wayDirection: ''})\r\n          // } else {   \r\n          //   // find and modif   \r\n          //   let wayInd = [];\r\n          //   mineInd(state.projects[projectInd[0]].versions[versionInd[0]].ways, wayId, 'wayId', wayInd);\r\n          //   if(etalonWay === state.projects[projectInd[0]].versions[versionInd[0]].ways[wayInd[0]].wayId) {\r\n          //     state.projects[projectInd[0]].versions[versionInd[0]].ways[wayInd[0]] = {wayId, color: wayColor, wayDirection}\r\n          //   } else {\r\n          //     state.projects[projectInd[0]].versions[versionInd[0]].ways[wayInd[0]] = {\r\n          //       ...state.projects[projectInd[0]].versions[versionInd[0]].ways[wayInd[0]], color: wayColor\r\n          //     }\r\n          //   }\r\n          // };\r\n        });\r\n\r\n\r\n\r\n        realWorkBranch.choseCount = answers.length;\r\n        realWorkBranch.question = {\r\n          coord: {\r\n            path: state.workBranch.pos,\r\n            height: 'question'\r\n          },\r\n          label,\r\n          main: mainPart,\r\n          comment,\r\n          picture: {\r\n            src: artSrc,\r\n            alt: artsDesription\r\n          }\r\n        };\r\n      }\r\n      \r\n      // первые 3 случая более чем реальны!\r\n      if(selectedType === \"0\" && currentHeight !== 'question') {\r\n        //обновить ПОД по рабочей высоте\r\n        updatePod()\r\n      } else if(selectedType === \"1\" && currentHeight === 'question') {\r\n        // обновить вопрос и ответы \r\n        updateAnswers()\r\n      } else if(selectedType === \"1\" && currentHeight !== 'question') {\r\n        updateAnswers()\r\n        debugger\r\n        if(currentHeight < (realWorkBranch.base.length-1)) {\r\n          // Добавить уведомления о том, что поды были перемещены по нулевому ответу\r\n          let zeroBase = realWorkBranch.base.splice(currentHeight+1);\r\n          // переписать адресы подов в соответсвтующие\r\n          realWorkBranch['q0'].branch.base = zeroBase.map((el, i) => {\r\n            return {\r\n              ...el,\r\n              coord: {path: el.coord.path+\"0\", height: i}\r\n            }\r\n          });\r\n        }\r\n        realWorkBranch.base.splice(currentHeight, 1);\r\n        state.workPCD[state.workPCD.workVersion].height = 'question';\r\n        \r\n        //обновить вопрос и ответы, а так же ликвидировать ПОД по высоте\r\n      } else if(selectedType === \"0\" && currentHeight === 'question') {\r\n        let realWorkBranch = state.workBranch.branch;\r\n        realWorkBranch.base = [...realWorkBranch.base, {\r\n          coord: {\r\n            path: state.workBranch.pos,\r\n            height: realWorkBranch.base.length\r\n          },\r\n          label,\r\n          main: mainPart,\r\n          comment,\r\n          picture: {\r\n            src: artSrc,\r\n            alt: artsDesription,\r\n          }\r\n        }]\r\n        state.workPCD[state.workPCD.workVersion].height = realWorkBranch.base.length-1;\r\n        \r\n        for(let i = 0; i < realWorkBranch.choseCount; i++) {\r\n          delete realWorkBranch['q'+i+''];\r\n        }\r\n        realWorkBranch.choseCount = 0;\r\n        realWorkBranch.question = false;\r\n        //опасный момент. Оставлю на последок.\r\n        //создать ПОД по максимальной высоте и ликвидировать вопрос с ответами.\r\n      }\r\n      state.workBranch.branch.branchDirection = branchDirection;\r\n      \r\n      // где то здесь получается...\r\n      state.workBranch.v = 'p'+random; // события по обработчику\r\n      return {\r\n        ...state\r\n      }\r\n    })();\r\n\r\n    case 'CHANGE_BRANCH': //wb.v--\r\n    // перемещения при выборе ответа на вопрос и отлетании на предыдущий вопрос\r\n    // payload = 0\r\n    \r\n    return (() => {\r\n      let projectInd = [];\r\n      mineInd(state.projects, state.workPCD.projectId, 'superId', projectInd)\r\n\r\n      let versionInd = [];\r\n      mineInd(state.projects[projectInd[0]].versions, state.workPCD.workVersion, 'superId', versionInd)\r\n      \r\n      if(payload === 'back') { // возвращение на ласт вопрос\r\n        let path = state.workPCD[state.workPCD.workVersion].path;\r\n        state.workPCD[state.workPCD.workVersion].path = path.substring(0, path.length-1);\r\n        state.workPCD[state.workPCD.workVersion].height = \"question\";\r\n        \r\n        \r\n        state.workBranch = state.projects[projectInd[0]].versions[versionInd[0]].data;\r\n        let workPath = state.workPCD[state.workPCD.workVersion].path.substring(1);\r\n        pathReducer(workPath, state);\r\n        // while(workPath) {\r\n        //   state.workBranch = state.workBranch.branch['q'+workPath[0]];\r\n        //   workPath = workPath.substring(1);\r\n        // };\r\n        if(state.workBranch.branch.base.length) {\r\n          state.workPCD[state.workPCD.workVersion].height = '0'\r\n        }\r\n\r\n      } else if(typeof payload === 'string') { // Event from map\r\n        debugger\r\n        state.workBranch = state.projects[projectInd[0]].versions[versionInd[0]].data;\r\n        state.workPCD[state.workPCD.workVersion].path = payload;\r\n        state.workPCD[state.workPCD.workVersion].height = \"question\";\r\n        let path = payload.substring(1);\r\n        pathReducer(path, state);\r\n\r\n        if(state.workBranch.branch.base.length) {\r\n          state.workPCD[state.workPCD.workVersion].height = '0'\r\n        }\r\n      } else {\r\n        debugger\r\n        state.workBranch = state.workBranch.branch['q'+payload];\r\n        state.workPCD[state.workPCD.workVersion].path = state.workPCD[state.workPCD.workVersion].path+payload;\r\n        state.workPCD[state.workPCD.workVersion].height = \"question\";\r\n        if(state.workBranch.branch.base.length) {\r\n          state.workPCD[state.workPCD.workVersion].height = \"0\";\r\n        }\r\n        \r\n      }\r\n      \r\n      state.workBranch.v = 'c'+random;\r\n      return {\r\n        ...state\r\n      }\r\n    })();\r\n    case 'ADD_POD': //wb.v\r\n    return (() => {\r\n      \r\n      console.log(payload)\r\n        // создание нового элемента и переадресация процесса на него\r\n        let realWorkBranch = state.workBranch.branch;\r\n        if(payload !== 'question') {\r\n          let firstPart = realWorkBranch.base.slice(0, +payload+1);\r\n          let secondPart = realWorkBranch.base.slice(+payload+1);\r\n          realWorkBranch.base = [...firstPart, {\r\n            coord: {\r\n              path: state.workBranch.pos,\r\n              height: +payload+1\r\n            },\r\n            label: '',\r\n            main: '',\r\n            comment: '',\r\n            picture: {\r\n              src: null,\r\n              alt: ''\r\n            }\r\n          }].concat(secondPart.map((data) => {\r\n            const {path, height} = data.coord\r\n            return {...data, coord: {path, height: +height+1}}\r\n          }));\r\n          state.workPCD[state.workPCD.workVersion].height = +payload+1;\r\n      } else {\r\n          realWorkBranch.base = [...realWorkBranch.base, {\r\n            coord: {\r\n              path: state.workBranch.pos,\r\n              height: realWorkBranch.base.length\r\n            },\r\n            label: '',\r\n            main: '',\r\n            comment: '',\r\n            picture: {\r\n              src: null,\r\n              alt: ''\r\n            }\r\n          }];\r\n          state.workPCD[state.workPCD.workVersion].height = realWorkBranch.base.length-1;\r\n        }\r\n        \r\n        state.workBranch.v = 'p'+random;\r\n      return {\r\n        ...state\r\n      }\r\n    })()\r\n    case 'CHOOSE_POD': \r\n    return (() => {\r\n      state.workPCD[state.workPCD.workVersion].height = payload;\r\n      state.mainPlace = 'editor';\r\n      state.workBranch.v = 'c'+random\r\n      return {\r\n        ...state\r\n      }\r\n    })()\r\n    case \"DELETE_POD\": //wb.v\r\n    return (() => {\r\n      \r\n      console.log(payload)\r\n      let realWorkBranch = state.workBranch.branch;\r\n      let newCurrentHeight;\r\n      if(payload === 'question') {\r\n        for(let i = 0; i < realWorkBranch.choseCount; i++) {\r\n          delete realWorkBranch['q'+i]\r\n        }\r\n        realWorkBranch.choseCount = 0;\r\n        realWorkBranch.question = false;\r\n        newCurrentHeight = realWorkBranch.base.length-1;\r\n      } else {\r\n        realWorkBranch.base.splice(payload, 1);\r\n        realWorkBranch.base = realWorkBranch.base.map((el, i) => ({...el, coord: {...el.coord, height: i}}))\r\n        \r\n        if((realWorkBranch.base.length-1) >= payload) {\r\n          newCurrentHeight = payload;\r\n        } else {\r\n          newCurrentHeight = payload-1;\r\n        }\r\n      }\r\n      state.workPCD[state.workPCD.workVersion].height = newCurrentHeight;\r\n      state.workBranch.v = 'p'+random;\r\n      return {\r\n        ...state\r\n      }\r\n    })()\r\n    case 'SELECT_PROJECT': \r\n    console.log(payload) // projectId\r\n    debugger\r\n    return (() => {\r\n\r\n      // Это не просто точка входа в проект, это МЕД БРИГАДА, которая уничтожает вредоносный PCD и делает новый, причем \r\n      // Отлавливаются проблемы на всех уровнях.. с последующей перезаписью через приставку.\r\n\r\n      // этот блок отвечает за то, что бы сейвить myLastProject, которые используется для возвращения домой\r\n      // и как альтернатива работе дом, так же сейвиться последний проект у друга... для восстановления \r\n      // ласт состояния у друга, после всех проверок..\r\n\r\n      let isFriend = state.personObj.userData.friends.some(({superId}) => superId === state.workPerson);\r\n      if(state.personObj.userData.superId !== state.workPerson) { \r\n\r\n        //обновление координат данных о последних проектах\r\n        // компонент сделан так убого, потому что я пытался добывать данные у случайных челов,\r\n        // что привело бы к бессконечноному нарастанию исключений, вокруг того пика.\r\n\r\n        if(isFriend) { \r\n          let workFriendInd;\r\n          for(let i in state.personObj.userData.friends) {\r\n            if(state.personObj.userData.friends[i].superId === state.workPerson) {\r\n              workFriendInd = i;\r\n            }\r\n          };\r\n          state.personObj.userData.friends[workFriendInd].lastProject = payload;\r\n        }\r\n      } else {\r\n        state.personObj.userData.myLastProject = payload;\r\n      };\r\n\r\n      // Ошибка не добитого PCD это норма, искать его на сервере можно, но лучше здесь\r\n      // Это и защита от других возможно еще не известных ошибок.\r\n\r\n      let PCDInd = [];\r\n      mineInd(state.projectsCoordsData, payload, 'projectId', PCDInd);\r\n\r\n      let projectInd = [];  // двухсторонная связь, данные 100% существуют.\r\n      mineInd(state.projects, payload, 'superId', projectInd)\r\n      \r\n      // Хендлинг остутсвия проекта в PCD юзера и компенсация пропуска.\r\n      // Работает как у гостя, так и у юзера.\r\n\r\n      function restartData() {\r\n        let firstVersionId = state.projects[projectInd[0]].versions[0].superId;\r\n        let workHeight = state.projects[projectInd[0]].versions[0].data.branch.base.length ? \"0\" : \"question\";\r\n        state.projectsCoordsData.push({projectId: payload, workVersion: firstVersionId, [firstVersionId]: {path: \"0\", height: workHeight}})\r\n        PCDInd = [state.projectsCoordsData.length-1];\r\n      }\r\n\r\n      if(!PCDInd.length) { // работает при пике проекта у друга и себя, если был делет\r\n        // add new project in PCD;\r\n        restartData()\r\n      }\r\n\r\n      state.workPCD = state.projectsCoordsData[PCDInd[0]]; \r\n\r\n      /// нужно отловить ошибку и выдать первичную дату ---> вынести в функцию обработчик исключений\r\n\r\n      let versionInd = [];\r\n      mineInd(state.projects[projectInd[0]].versions, state.workPCD.workVersion, 'superId', versionInd);\r\n      \r\n      if(!versionInd.length) {\r\n        // найти wrong pcd и уничтожить\r\n        let wPCDInd = [];\r\n        mineInd(state.projectsCoordsData, payload, 'projectId', wPCDInd);\r\n        state.projectsCoordsData.splice(wPCDInd[0], 1);\r\n        restartData()\r\n        versionInd = ['0'];\r\n        state.workPCD = state.projectsCoordsData[PCDInd[0]]; \r\n      } \r\n      state.workBranch = state.projects[projectInd[0]].versions[versionInd[0]].data;\r\n      \r\n      // нужно добавить проверку на существование рабочей высоты и пода.. ибо данные в PCD могли устареть\r\n      // в том смысле, что этих высот и путей уже нет.\r\n\r\n      let path = state.workPCD[state.workPCD.workVersion].path.substring(1)\r\n      pathReducer(path, state);\r\n      debugger\r\n      if(state.workBranch !== 'None') {\r\n        debugger\r\n        localStorage.chooseProjectFlag = 'false'\r\n        checkBottomData(() => {localStorage.chooseProjectFlag = 'true'});\r\n        debugger\r\n        if(localStorage.chooseProjectFlag !== 'true') {\r\n          state.projectsCoordsData.splice(PCDInd[0], 1);\r\n          restartData();\r\n          state.workPCD = state.projectsCoordsData[PCDInd[0]];\r\n            // чекнуть последствия таких включений \r\n          //state.workBranch.branch = state.projects[projectInd[0]].versions[versionInd[0]].data.branch;\r\n        }\r\n      } else {\r\n        state.projectsCoordsData.splice(PCDInd[0], 1);\r\n        restartData();\r\n        state.workPCD = state.projectsCoordsData[PCDInd[0]];\r\n         // чекнуть последствия таких включений \r\n        //state.workBranch.branch = state.projects[projectInd[0]].versions[versionInd[0]].data.branch;\r\n      } \r\n      state.workBranch = state.projects[projectInd[0]].versions[versionInd[0]].data;\r\n      state.workBranch.v = 'c'+random;\r\n      state.mainPlace = 'editor';\r\n      return {\r\n        ...state,\r\n      }\r\n    })()\r\n    case 'SELECT_VERSION': \r\n    debugger\r\n    return (() => {\r\n      //payload  -> pcd.workVersion\r\n      let projectInd = [];\r\n      mineInd(state.projects, state.workPCD.projectId, 'superId', projectInd);\r\n\r\n      let versionInd = [];\r\n      mineInd(state.projects[projectInd[0]].versions, payload, 'superId', versionInd);\r\n\r\n      if(!state.workPCD.hasOwnProperty(payload)) { \r\n        // пришел чел с другого акка, он не был при создании версии.. или user после delete\r\n        const height = state.projects[projectInd[0]].versions[versionInd[0]].data.branch.base.length ? '0' : 'question';\r\n        state.workPCD[payload] = {path: '0', height}\r\n      } \r\n\r\n      // check wron\r\n\r\n      state.workPCD.workVersion = payload;\r\n      \r\n      state.workBranch = state.projects[projectInd[0]].versions[versionInd[0]].data;\r\n\r\n      state.workBranch.v = 'c'+random\r\n      return state;\r\n    })();\r\n    // case 'PREVIEW_PERSON': \r\n    // return (() => {\r\n    //   // ОЧЕНЬ ПЛОХАЯ ИДЕЯ... ОЧЕНЬ.. без... И все таки это улетает на ребилд после альфы.\r\n\r\n    //   console.log(\"PREVIEW_PERSON: \", payload) \r\n    //      // payload = {userData, projects, }\r\n    //   const {projects, userData} = payload;\r\n    //   state.projects = projects;\r\n    //   state.workPerson = userData.superId;\r\n    //   state.workBranch = projects[0].versions[0].data;\r\n\r\n    //   //let versionId = projects[0].versions[0].superId;\r\n    //   // projects.reverse().forEach(({superId, versions: {superId: versionId}}) => {\r\n    //   //   state.projectsCoordsData.push({projectId: superId, workVersion, }) // это должно быть частью SELECT PROJECT\r\n    //   // }) // дополнение PCD при отсутстивии пакета с Id выбранного проекта\r\n    //   // state.workPCD = {\r\n    //   //   projectId: projects[0].superId, \r\n    //   //   workVersion: versionId,\r\n    //   //   [versionId]: {path: \"0\", height: \"0\"}\r\n    //   // };\r\n    //   //state.projectsCoordsData.push(state.workPCD);\r\n   \r\n    //   return state\r\n    // })()\r\n    case 'ADD_FRIEND': \r\n      //payload === user \r\n      debugger\r\n      console.log(payload)\r\n      return (() => {\r\n        const {userData} = payload\r\n        state.personObj.userData.friends.push({superId: userData.superId, lastProject: null});\r\n        state.friends.push(payload);\r\n        return state\r\n      })()\r\n    case 'CHOOSE_ME': \r\n      return (() => {\r\n        // вызов с вынужденной датой через перепресваивание рабочего проекта\r\n        // грядет эпоха геттеров \r\n\r\n        // ф находит последнюй проект, который хранится в state.personObj.userData.myLastProject\r\n        // и если он существует, пытается найти его PCD и его самого. В случае, если все данные на месте\r\n        // создает workBranch и перебрасывает на editor \r\n        // Если же он не может найти что то по координатным данным, или если этих самых PCD нет\r\n        // То он зануляет все важны рычаги (workPCD и workBranch) и выбрасывает на нейтрольное месте.\r\n        // Откуда можно выбрать другой проект или создать новый.\r\n        // Алгорит описана в INIT\r\n\r\n        state.workBranch = {};\r\n        state.projects = payload;\r\n        state.workPerson = state.personObj.userData.superId;\r\n\r\n        if(state.personObj.userData.myLastProject !== null) {\r\n          const lastProject = state.personObj.userData.myLastProject;\r\n\r\n          let projectsCoordInd = [];\r\n          mineInd(state.projectsCoordsData, lastProject, 'projectId', projectsCoordInd)\r\n\r\n          if(projectsCoordInd.length) { \r\n            // PCD существует, значит проверка. ПРОСТО 2 ПРОВЕРКИ потом сделаю исключения более лаконичными.\r\n\r\n            state.workPCD = state.projectsCoordsData[projectsCoordInd[0]];\r\n            let projectInd = []\r\n            mineInd(state.projects, state.workPCD.projectId, 'superId', projectInd)\r\n\r\n            if(projectInd.length) {\r\n              let versionInd = [];\r\n              mineInd(state.projects[projectInd[0]].versions, state.workPCD.workVersion, 'superId', versionInd)\r\n        \r\n              if(versionInd.length) {\r\n                state.workBranch = state.projects[projectInd[0]].versions[versionInd[0]].data;\r\n                let path = state.workPCD[state.workPCD.workVersion].path.substring(1);\r\n                pathReducer(path, state);\r\n\r\n                if(state.workBranch !== 'None') {\r\n\r\n                  // CHECK POD || QUERY проверка комплексная.. \r\n                  ///// надо вынести это в отдельную функцию....\r\n                  checkBottomData(() => state.mainPlace = 'editor');\r\n                  /////\r\n                  \r\n                } else {\r\n                  returnError()\r\n                }\r\n\r\n              } else { \r\n                returnError()\r\n              }\r\n\r\n            } else {\r\n              returnError()\r\n            }\r\n\r\n          } else {\r\n            returnError()\r\n          }\r\n          \r\n        } else {\r\n          state.workPCD = null\r\n          state.workBranch.branch = {};\r\n          state.mainPlace = 'beginner'\r\n        }\r\n      state.workBranch.v = 'c'+random\r\n        return state;\r\n      })()\r\n    case 'CHOOSE_PERSON':\r\n  \r\n      // будут ли происходить изменения в друзьях при модифировании \r\n      return (() => {\r\n        //payload === superId [friend]\r\n        \r\n        // по сути работы ф похожа на chooseMe, так что все подробное объяснение там.\r\n        // Возможно функции будут слиты в одну.\r\n        // Алгорит описана в INIT\r\n\r\n        debugger\r\n        let friendInd = [];\r\n        mineInd(state.friends, payload, ['userData', 'superId'], friendInd);\r\n\r\n        state.projects = state.friends[friendInd[0]].projects;\r\n\r\n        let deepFriendInd = [];\r\n        mineInd(state.personObj.userData.friends, payload, 'superId', deepFriendInd);\r\n        // friends last project....\r\n        let lastMyProjectInFriend = state.personObj.userData.friends[deepFriendInd[0]].lastProject;\r\n\r\n        if(lastMyProjectInFriend !== null) {\r\n          // поиск рабочего PCD, который отвечает за последний последний проект, версию, высотку пода.\r\n          let PCDInd = [];\r\n          mineInd(state.projectsCoordsData, lastMyProjectInFriend, 'projectId', PCDInd);\r\n          \r\n          if(PCDInd.length) {\r\n\r\n            state.workPCD = state.projectsCoordsData[PCDInd[0]];\r\n            let projectInd = [];\r\n            mineInd(state.projects, state.workPCD.projectId, 'superId', projectInd)\r\n            \r\n            if(projectInd.length) {\r\n\r\n              console.time()\r\n              let versionInd = [];\r\n              mineInd(state.projects[projectInd[0]].versions, state.workPCD.workVersion, 'superId', versionInd)\r\n              \r\n              if(versionInd.length) {\r\n\r\n                console.timeEnd()\r\n                state.workBranch = state.projects[projectInd[0]].versions[versionInd[0]].data;\r\n                let path = state.workPCD[state.workPCD.workVersion].path.substring(1);\r\n                pathReducer(path, state)\r\n\r\n                if(state.workBranch !== 'None') {\r\n\r\n                  // CHECK POD || QUERY проверка комплексная.. \r\n                  checkBottomData(() => state.mainPlace = 'editor');\r\n                } else {\r\n                  returnError()\r\n                }\r\n\r\n              } else {\r\n                returnError()\r\n              }\r\n              \r\n            } else {\r\n              returnError()\r\n            }\r\n            \r\n          } else {\r\n            returnError()\r\n          }\r\n          \r\n        } else {\r\n          state.workPCD = null;\r\n          state.workBranch.branch = {};\r\n          state.mainPlace = 'choose'\r\n        }\r\n        state.workPerson = payload;\r\n        state.workBranch.v = 'c'+random;\r\n        return {\r\n          ...state\r\n        }\r\n      })()\r\n    case 'INIT':\r\n      debugger\r\n      return (() => {\r\n        // Прокоментить каждое действие и интегрировать mineInd\r\n\r\n        // Важнейший элемент в работе приложения. \r\n        // Отвечает за формирование нормального рабочего состояния, на основе данных в payload\r\n        // Алгоритм: 1. Прокидывает основные данные (даже если они пустые)\r\n        // 2. Определяет рабочий PCD на основе последнего проекта. -> Если нет проекта, вернет [],\r\n        // Который отловится дальше и выбросит исключение.\r\n        // 3. Определяет был ли юзер в другом профиле или у себя на момент последнего экшна. \r\n        // На основе этой инфы выбирается источник проектов, от которого зависит workBranch.\r\n        // 4. Утверждается рабочая персона, от которой зависит работа updateDate и обновление myLastProject, \r\n        // а так же superId в friends проектах.\r\n        // 5. Находится рабочий проект, или нет.\r\n        // 6. Находится рабочая версия или нет.\r\n        // 7. И ластовые проверки на существование рабочей высоты, Если хоть чего то нет, то редирект на error.\r\n\r\n        console.log('%c%s', 'color: pink; font-size: 22px', \"DEBUG:\", payload);\r\n        const {friends, personObj: {projects, projectsCoordsData, lastProject, lastPerson, userData: {superId}}} = payload;\r\n        state.personObj = payload.personObj // 1\r\n\r\n        state.projectsCoordsData = state.personObj.projectsCoordsData; // 1\r\n        state.friends = friends // 1\r\n        // Всегда можно найти себя по этому адресу..\r\n      \r\n        state.workBranch = {};\r\n        \r\n        let projectsCoordInd = [];\r\n        mineInd(projectsCoordsData, lastProject, 'projectId', projectsCoordInd) \r\n        // по налу он не найдет ничего))\r\n\r\n        if(lastPerson === superId) { // спавнимся дома\r\n          /// \r\n          state.workPerson = superId;\r\n          state.projects = state.personObj.projects;\r\n          ///\r\n          if(projectsCoordInd.length) { \r\n            state.workPCD = state.projectsCoordsData[projectsCoordInd[0]];\r\n            let lockInd = [];\r\n            mineInd(projects, lastProject, 'superId', lockInd);\r\n\r\n            if(lockInd.length) {\r\n\r\n              \r\n              let versionInd = [];\r\n              mineInd(state.projects[lockInd[0]].versions, state.workPCD.workVersion, 'superId', versionInd)\r\n\r\n              if(versionInd.length) {\r\n\r\n                state.workBranch = state.projects[lockInd[0]].versions[versionInd[0]].data;\r\n                let path = state.workPCD[state.workPCD.workVersion].path.substring(1);\r\n                pathReducer(path, state)\r\n              \r\n                if(state.workBranch !== 'None') { \r\n                  checkBottomData(() => state.mainPlace = 'editor')\r\n                } else {\r\n                  returnError()\r\n                }\r\n\r\n              } else {\r\n                returnError()\r\n              }\r\n\r\n              // if(projectsCoordInd[0] !== null) { /// Нужно еще branch и path чекать.... Ебаа\r\n              //   // Уже есть проект \r\n                \r\n      \r\n              // } else { /// PCD CHECK NAT\r\n              //   // еще нет проектов \r\n              //   state.workPCD = null\r\n              //   state.workBranch.branch = {};\r\n              //   state.mainPlace = 'beginner'\r\n              // }\r\n              \r\n            } else {\r\n              returnError(); \r\n            }\r\n\r\n          } else {\r\n            returnError() // PROJECT CHECK\r\n          }\r\n          \r\n        } else { // спавнимся в гостях\r\n          debugger\r\n          // обработать ошибку с отключенным аксессом и в следствии этого упавшим проектом\r\n\r\n          // поиск проекта и метаданных у другого персонажа\r\n          // можно добавлять в друзья, если есть хотя бы один проект\r\n          // ДОДЕЛАТЬ С ДЕБАГЕРОМ...\r\n\r\n          // ЧТО ЕСЛИ У ЧЕЛА НЕТ ПРОЕКТОВ????\r\n          // ЗАСЕЙВИТЬ ГДЕ ТО данные персон обjecta;;\r\n          // все норм, только нужно хендлить пустые проекты \r\n          state.workPerson = lastPerson; // прокинут ийди человечка\r\n\r\n          let friendInd = [];\r\n          mineInd(friends, lastPerson, ['userData', 'superId'], friendInd)\r\n\r\n          // профиля пока что не удаляются поэтому сейв не нужен\r\n\r\n          // friends.forEach(({userData: {superId}}, i) => {\r\n          //   if(lastPerson === superId) {\r\n          //     friendInd = i;\r\n          //   }\r\n          // })\r\n          state.projects = state.friends[friendInd[0]].projects; /// прокинуты проекты\r\n\r\n\r\n\r\n          if(projectsCoordInd.length) {\r\n            state.workPCD = state.projectsCoordsData[projectsCoordInd[0]]; \r\n\r\n            if(lastProject !== null) { // ЕСть с чем работать. юзлесный чек, но историчный, так что сейвлю\r\n              let projectInd = [];\r\n              mineInd(state.projects, lastProject, 'superId', projectInd);\r\n\r\n              if(projectInd.length) {\r\n                \r\n                let versionInd = [];\r\n                mineInd(state.projects[projectInd[0]].versions, state.workPCD.workVersion, 'superId', versionInd)\r\n                \r\n                if(versionInd.length) {\r\n                  state.workBranch = state.projects[projectInd[0]].versions[versionInd].data  // прокинут ворк бренч.\r\n                  let path = state.workPCD[state.workPCD.workVersion].path.substring(1);\r\n                  pathReducer(path, state)\r\n                  if(state.workBranch !== 'None') {\r\n                    checkBottomData(() => state.mainPlace = 'editor')\r\n                  } else {\r\n                    returnError()\r\n                  }\r\n                } else {\r\n                  returnError()\r\n                }\r\n              \r\n              } else {\r\n                returnError()\r\n              }\r\n  \r\n            } else { // юзлес вроде. УДали.\r\n              state.workPCD = null;\r\n              state.workBranch.branch = {};\r\n              state.mainPlace = 'choose'\r\n            }\r\n\r\n          } else {\r\n            returnError()\r\n          }\r\n\r\n        }\r\n        state.workBranch.v = Math.random();\r\n        return {\r\n          ...state\r\n        }\r\n      })()\r\n    default:\r\n      return state;\r\n  }\r\n  \r\n  // function mineInd(source, etalon, key, mod) {\r\n  //   for(let i in source) {\r\n  //     const natSource = i => {\r\n  //         key = Array.isArray(key) ? key : [key]\r\n  //         let base = source[i];\r\n  //         let keyPath = key.slice();\r\n  //         while(keyPath.length) {\r\n  //           base = base[keyPath.shift()];\r\n  //         }\r\n  //         return base;\r\n  //     }\r\n  //     if(natSource(i) === etalon) {\r\n  //       mod[0] = i\r\n  //     }\r\n  //   }\r\n  // };\r\n  function pathReducer(path, state) { /// переместить это чудо функцию наверх\r\n    while(path.length) {\r\n      state.workBranch = state.workBranch?.branch?.['q'+(path?.[0] ?? 'none')] ?? \"None\";\r\n      path = path.substring(1);\r\n    };\r\n  };\r\n}\r\n\r\n","const defState = {\r\n  nickname: \"Es_ILias\",\r\n  avatar: \"\",\r\n  lastProject: 'none'\r\n}\r\n\r\nexport default (state = defState, {type, payload}) => {\r\n  switch(type) {\r\n    case \"SET_USER\": \r\n    return (() => {\r\n      return {\r\n        ...state\r\n      }\r\n    })();\r\n    default:\r\n    return {\r\n      ...state\r\n    }\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport main from './main';\r\nimport user from './user'\r\n\r\nexport default combineReducers({\r\n  main,\r\n  user\r\n})","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n//makeMiddleware, that catch game actions and make req to server;\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst randomMiddleware = store => next => action => {\r\n  console.log(\"STORE:\", store);\r\n  console.log(\"ACTION:\", action);\r\n  console.log(\"NEXT:\",next);\r\n  action.random = Math.random();\r\n  next(action)\r\n}\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk, randomMiddleware)))\r\n\r\nexport default store","import axios from 'axios'\r\nimport store from '../store'\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\naxios.defaults.headers.common['token'] = localStorage.token;\r\n\r\nwindow.axios = axios;\r\n\r\nwindow.sendErrors = (message) => {\r\n  axios.post('/error', {message, data: window.reduxHistory, token: localStorage.token})\r\n    .then(() => console.log(\r\n      '%c%s', \r\n      'color: mediumseagreen; font-size: 20px;', \r\n      'Спасибо, что помогаете улучшить софт. Если после перезагрузки ошибка не пройдет, то пишите мне личку'\r\n      ))\r\n  //console.log('SEND_ERROR!')\r\n}\r\n  \r\nexport default axios","export const addPod = payload => ({\r\n  type: 'ADD_POD',\r\n  payload\r\n})\r\nexport const deletePod = payload => ({\r\n  type: 'DELETE_POD',\r\n  payload\r\n})\r\nexport const savePod = payload => ({\r\n  type: 'SAVE_POD',\r\n  payload\r\n})\r\nexport const choosePod = payload => ({\r\n  type: 'CHOOSE_POD',\r\n  payload\r\n})\r\nexport const addProject = payload => ({\r\n  type: 'ADD_PROJECT',\r\n  payload\r\n})\r\nexport const setupProject = payload => ({\r\n  type: 'SETUP_PROJECT',\r\n  payload\r\n})\r\nexport const selectProject = payload => ({\r\n  type: \"SELECT_PROJECT\",\r\n  payload\r\n})\r\nexport const selectVersion = payload => ({\r\n  type: 'SELECT_VERSION',\r\n  payload\r\n})\r\nexport const openPlace = payload => ({\r\n  type: 'OPEN_PLACE',\r\n  payload\r\n})\r\nexport const updateUsers = users => ({\r\n  type: \"UPDATE_USERS\",\r\n  payload: users\r\n})\r\nexport const updateApplicantList = payload => ({\r\n  type: 'UPDATE_APPLICANT_LIST',\r\n  payload\r\n})\r\nexport const previewPerson = payload => ({\r\n  type: 'PREVIEW_PERSON',\r\n  payload\r\n})\r\nexport const cleanApplicantList = payload => ({\r\n  type: 'CLEAN_APPLICANT_LIST',\r\n  payload\r\n})\r\nexport const addFriend = payload => ({\r\n  type: 'ADD_FRIEND',\r\n  payload\r\n})\r\nexport const setIllustrations = payload => ({\r\n  type: 'SET_ILLUSTRATIONS',\r\n  payload\r\n})\r\nexport const setMapData = payload => ({\r\n  type: 'SET_MAP_DATA',\r\n  payload\r\n})\r\nexport const deleteData = payload => ({\r\n  type: 'DELETE',\r\n  payload\r\n})\r\nexport const newFriendProject = payload => ({\r\n  type: 'NEW_FRIEND_PROJECT',\r\n  payload\r\n})\r\nexport const logOut = () => ({\r\n  type: 'LOGOUT'\r\n})\r\n// export const openProjectSetup = () => ({\r\n//   type: 'OPEN_PROJECT_SETUP'\r\n// })\r\n// export const openVersionsEditor = () => ({\r\n//   type: 'OPEN_VERSIONS_EDITOR'\r\n// })\r\n// export const opedProjectCreator = () => ({\r\n//   type: 'OPEN_PROJECT_CREATOR'\r\n// })\r\n// export const openSocialPanel = () => ({\r\n//   type: ' OPEN_SOCIAL_PANEL'\r\n// })\r\nexport const addVersion = payload => ({\r\n  type: 'ADD_VERSION',\r\n  payload\r\n})\r\nexport const changeBranch = payload => ({\r\n  type: \"CHANGE_BRANCH\",\r\n  payload\r\n})\r\nexport const changeMaster = payload => ({\r\n  type: 'CHANGE_MASTER',\r\n  payload\r\n})\r\nexport const saveVersion = payload => ({\r\n  type: 'SAVE_VERSION',\r\n  payload\r\n})\r\n\r\nexport const loginIn = () => ({\r\n  type: 'LOGIN_IN'\r\n})\r\nexport const choosePerson = payload => ({\r\n  type: 'CHOOSE_PERSON',\r\n  payload\r\n})\r\nexport const chooseMe = payload => ({\r\n  type: 'CHOOSE_ME',\r\n  payload\r\n})\r\nexport const accessControl = payload => ({\r\n  type: 'ACCESS_CONTROL',\r\n  payload\r\n})\r\n\r\n//GETTERS\r\nexport const updateData = payload => ({\r\n  type: 'UPDATE_DATA', \r\n  payload\r\n})\r\n","import axios from '../axios'\r\n\r\nexport default {\r\n  login: (data) => axios.post('/auth/login', data),\r\n  register: (data) => axios.post('/auth/register', data),\r\n  checkToken: () => axios.post('/auth/check')\r\n}\r\n","import data from '@/core/data.json'\r\nimport {auth} from '@/core/api'\r\nimport {socket} from '@/core'\r\nimport {openNotification, upFirstSimbol} from '@/utils'\r\n\r\n\r\nexport const setUserData = payload => ({\r\n  type: 'SET_PROJECTS_DATA',\r\n  payload\r\n})\r\n\r\nconst dataInit = payload => ({\r\n  type: 'INIT',\r\n  payload\r\n})\r\n\r\nexport const fetchUserData = () => dispatch => {\r\n  debugger\r\n  new Promise((resolve, reject) => {\r\n    try {\r\n     let objData = JSON.parse(data);\r\n     resolve(objData)\r\n     //\r\n    } catch(err) {\r\n      reject(false)\r\n      console.log('Error parse data json')\r\n    }\r\n  })\r\n  .then(data => dispatch(setUserData(data)))\r\n}\r\n\r\nexport const userLogin = (data) => dispatch => {\r\n  auth.login(data)\r\n    .then((reqData) => {\r\n      //debugger\r\n      console.log(reqData)\r\n      const {status, token, data, msg} = reqData.data;\r\n      \r\n\r\n      if(reqData.data.status === 'success') {\r\n        openNotification({type: status, message: upFirstSimbol(status), description: msg})\r\n        localStorage.token = token;\r\n        socket.emit('JOIN', {token: localStorage.token});\r\n        dispatch(dataInit(data));\r\n      } else {\r\n        openNotification({type: status, message: upFirstSimbol(status), description: msg})\r\n        // wake up notice \r\n      }\r\n\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Error login: \", err)\r\n    })\r\n}\r\n\r\nexport const autoLoginWithToken = () => dispatch => {\r\n  auth.checkToken()\r\n    .then((reqData) => {\r\n      const {status, msg,  token, data} = reqData.data\r\n      if(status === 'success') {\r\n        openNotification({type: status, message: upFirstSimbol(status), description: msg})\r\n        localStorage.token = token;\r\n        socket.emit('JOIN', {token: localStorage.token});\r\n        dispatch(dataInit(data));\r\n      } else {\r\n        openNotification({type: status, message: upFirstSimbol(status), description: msg})\r\n        delete localStorage.token\r\n      }\r\n    })\r\n    .catch((er) => {\r\n      console.log('%c%s', 'color: red;font-size:33px;', 'AUTO_LOGIN_ERR:', er)\r\n    })\r\n}\r\n","import io from 'socket.io-client'\r\nimport store from '@/store';\r\nimport {\r\n  updateUsers, \r\n  updateApplicantList, \r\n  addFriend, \r\n  accessControl, \r\n  updateData, \r\n  newFriendProject,\r\n  deleteData,\r\n  setIllustrations,\r\n  setMaster} from '@/actions'\r\n\r\nimport {openNotification} from '@/utils'\r\n\r\n\r\nconst socket = io('http://localhost:4040', {\r\n  transports: ['polling']\r\n}); \r\n\r\nsocket\r\n  .on('connect', () => {\r\n    console.log('%c%s', 'color: green; font-size: 23px', \"REAL_SOCKET_CONNECT\")\r\n    //console.log(localStorage.token)\r\n    //let realToken = localStorage.token;\r\n    //realToken && socket.emit('JOIN', {token: realToken});\r\n  })\r\n  .on('FORB', () => {\r\n    console.log('%c%s', 'color: pink; font-size: 18px;', 'FORBIDDEN');\r\n    delete localStorage.token\r\n  })\r\n  // РАБОТКА)))ы\r\n  .on('FORBIDDEN', () => {\r\n    console.log('%c%s', 'color: darkred; font-size: 22px;', 'GET_FORBIDDEN')\r\n  })\r\n  .on('VERSION_UPDATE', (pass) => { // добавь фильтровалку по сендеру\r\n    store.dispatch(updateData({data: pass, address:'versions'})) \r\n    console.log('GG_WP')\r\n    console.log('%c%s','color: indigo; font-size: 22px;','VERSION_UPDATE_PASS: ', pass)\r\n  })\r\n  .on('NEW_VERSION', pass => {\r\n    console.log('%c%s', 'color: goldenrod; font-size: 22px;', 'NEW_VERSION_YOU_PROJECT', pass)\r\n  })\r\n  // ACCESS ZONE\r\n  // существует критический баг, при изменении all доступа со стороны выбираемой персоны, во время пиков\r\n  // теоретически решается хардкодом. Создание новых обработчиков или добавление аргументов к нижним... \r\n  .on('NEW_ACCESS', pass => {\r\n    \r\n    store.dispatch(accessControl({event: 'NEW', pass}))\r\n    //console.log('%c%s', 'color: forestgreen; font-size: 22px;', 'GET_SHOW_ACCESS', pass)\r\n  })\r\n  .on('NEW_SUPER_ACCESS', pass => {\r\n    openNotification({type: 'success', message: \"New super access\", description: `From ${pass.nickName}`})\r\n    store.dispatch(accessControl({event: 'NEW_SUPER', pass}))\r\n    //console.log('%c%s', 'color: forestgreen; font-size: 22px;', 'GET_SUPER_ACCESS', pass)\r\n  })\r\n  .on('KICK', pass => {\r\n    \r\n    store.dispatch(accessControl({event: 'KICK', pass}))\r\n  })\r\n  .on('SUPER_KICK', pass => {\r\n\r\n    store.dispatch(accessControl({event: 'SUPER_KICK', pass}))\r\n  })\r\n  // FRIEND EVENTS ZONE\r\n  .on('FRIEND_REQUEST', ({user}) => {\r\n    console.log('%c%s', 'color: aqua; font-size: 22px', 'FRIEND_REQUEST:', user)\r\n    openNotification({type: 'info', message: 'New request to friend'})\r\n    store.dispatch(updateApplicantList(user))\r\n    // openNotification by antd \r\n  })\r\n  .on('ACCEPT_REQUEST', ({user}) => { // like callback from click in social\r\n    console.log('%c%s', 'color: deeporange; font-size: 22px', 'ACCEPT_REQUEST:', user);\r\n    store.dispatch(addFriend(user))\r\n  })\r\n  .on('NEW_FRIEND', ({user}) => { // response on click \"ADD_TO_COMPADRE\"\r\n    console.log('%c%s', 'color: navy; font-size: 22px', 'NEW_FRIEND:', user);\r\n    openNotification({type: 'success', message: 'Accept request', description: `New friend: ${user.userData.nickName}`})\r\n    store.dispatch(addFriend(user));\r\n    \r\n  })\r\n  .on('NEW_AVAILABLES', ({person, workPCD, payload: pass, sender}) => {\r\n    // wtf а как фильтрить?\r\n    // можно фильтрить по сэндеру === personObj.superId? ГО\r\n    debugger\r\n    const {main: {personObj: {userData: {superId}}}} =  store.getState();\r\n    superId !== sender && store.dispatch(updateData({data: {person, workPCD, pass}, address: 'available'}));\r\n  })\r\n  .on('NEW_ILLUSTRATIONS', ({person, workPCD, newIllust, action, sender}) => {\r\n    // Эксперитентальный подход со съеданием сендер ивента в лайв режиме.\r\n    const {main: {personObj: {userData: {superId}}}} =  store.getState();\r\n    store.dispatch(updateData({data: { person, newIllust, action, workPCD}, address: 'illustrations'}))\r\n  })\r\n  .on('REQUEST_RIGHT', ({sender}) => {\r\n    const {main: {personObj: {userData: {superId}}, friends}} = store.getState();\r\n    superId !== sender && (() => {\r\n      let nickName;\r\n      friends.forEach(({userData: {superId: fsID, nickName: fnN}}) => {\r\n        if(fsID === sender) {\r\n          nickName = fnN;\r\n          return\r\n        }\r\n      });\r\n      openNotification({type: 'info', message: 'Right request', description: `By ${nickName}` })\r\n    })()\r\n  })\r\n  .on('NEW_FRIEND_PROJECT', ({project, sender}) => {\r\n    debugger\r\n    const {main: {personObj: {userData: {superId}}}} = store.getState();\r\n    superId !== sender && store.dispatch(newFriendProject({personId: sender, project}));\r\n  })\r\n  .on('NEW_FRIEND_VERSION', ({person, projectId, workVersion, sender}) => {\r\n    debugger\r\n    const {main: {personObj: {userData: {superId}}}} = store.getState();\r\n    superId !== sender && (() => {\r\n      store.dispatch(updateData({data: {person, projectId, workVersion}, address: 'new_version'}));\r\n      //openNotification({type: 'info', message: 'New version', description: })\r\n    })()\r\n  })\r\n  .on('DELETE', ({person, workPCD, target, sender}) => {\r\n    store.dispatch(updateData({data: {person, workPCD, target}, address: 'delete'}));\r\n\r\n  })\r\nlet lastV = null;\r\n\r\n// if(!localStorage.token && ) {\r\n//   socket.disconnect()\r\n// }\r\nstore.subscribe(() => {\r\n  let freshState = store.getState();\r\n  // if(freshState.main.users == false) {\r\n  //   socket.emit('GET_USERS', ({users}) => {\r\n  //     store.dispatch(updateUsers(users));\r\n  //   })\r\n  // }\r\n  if(freshState.main.workBranch && (lastV !== freshState.main.workBranch.v)) {\r\n    console.log('%c%s', 'color: royalblue; font-size: 22px;', \"DEBUG_STATE: \", freshState);\r\n    let {main:{projectsCoordsData: pcd, workBranch: {v}, workPerson: person, workPCD, projects, personObj, availablePayload: avPayload}} = freshState\r\n    let token = localStorage.token;\r\n    let project = freshState.main.projects ? freshState.main.projects[0] : null;\r\n    let myLastProject = personObj.userData.myLastProject;\r\n    debugger\r\n    let checkSimbol = (v+'').substring(0, 1);\r\n    switch(checkSimbol) {\r\n      case \"c\": \r\n      //coord change handl;\r\n      socket.emit('UPDATE_PCD', {\r\n        token, pcd, person, \r\n        lastProject: workPCD ? workPCD.projectId : null, \r\n        myLastProject,\r\n        friends: personObj.userData.friends\r\n      })\r\n      break;\r\n      case \"p\":\r\n      // exist project change handl\r\n      socket.emit('UPDATE_PROJECTS', {\r\n        token, pcd, workVersion: (() => {\r\n          debugger\r\n          let {projects, workPCD: {projectId, workVersion}} = freshState.main;\r\n\r\n          let projectInd;\r\n          for(let i in projects) {\r\n            if(projects[i].superId === projectId){\r\n              projectInd = i;\r\n            }\r\n          }\r\n          let versionInd;\r\n          for(let i in projects[projectInd].versions) {\r\n            if(projects[projectInd].versions[i].superId === workVersion) {\r\n              versionInd = i;\r\n            }\r\n          }\r\n          return projects[projectInd].versions[versionInd].data;\r\n        })(),\r\n        projectId: workPCD.projectId,\r\n        versionId: workPCD.workVersion,\r\n        person\r\n      })\r\n      break;\r\n      case 'n': \r\n      // new project handl\r\n      // Доведи дело с access до конца..\r\n      socket.emit('NEW_PROJECT', {\r\n        token, project, pcd, myLastProject\r\n      })\r\n      break;\r\n      case 'v': \r\n      // new version handl\r\n      (() => {\r\n        let {workVersion, projectId} = workPCD;\r\n        socket.emit('NEW_VERSION', {\r\n          token, pcd, person, \r\n          projectId,\r\n          versionId: workVersion,\r\n          workVersion: (() => {\r\n            \r\n            let projectInd;\r\n            for(let i in projects) {\r\n              if(projects[i].superId === projectId) {\r\n                projectInd = i;\r\n              }\r\n            }\r\n            // НЕВЕРОЯТНО РЕДКИЙ БАГ МОЖЕТ ОТПРАВИТЬ ЧУЖУЮ ВЕРСИЮ, КАК ТВОЮ...\r\n            let versionInd;\r\n            for(let i in projects[projectInd].versions) {\r\n              if(projects[projectInd].versions[i].superId === workVersion) {\r\n                versionInd = i;\r\n              }\r\n            }\r\n\r\n            return projects[projectInd].versions[versionInd];\r\n          })()\r\n        })\r\n      })()\r\n      break;\r\n      case 's':\r\n      //SETUP worker\r\n      (() => {\r\n        const {kicked, superKicked, newObservers, newEditord} = freshState.main;\r\n        let projectInd;\r\n        for(let i in projects) {\r\n          if(projects[i].superId === workPCD.projectId) {\r\n            projectInd = i;\r\n          }\r\n        };\r\n        const {name, description, access, superAccess} = projects[projectInd];\r\n        socket.emit('SETUP_PROJECT', {\r\n          token,\r\n          projectData: {name, description, access, superAccess},\r\n          projectId: workPCD.projectId,\r\n          kicked,\r\n          superKicked,\r\n          newObservers,\r\n          newEditord\r\n        })\r\n      })()\r\n      break;\r\n      case 'a':\r\n      (() => {\r\n        socket.emit('UPDATE_AVAILABLE', {\r\n          token: localStorage.token, \r\n          workPCD, \r\n          person, \r\n          payload: avPayload\r\n        })\r\n      })()\r\n      break;\r\n      // case 'i':  //Сокет вылетает вместе axios запросом, вернее на его калбеке;\r\n      // (() => {\r\n      //   socket.emit('UPDATE_ILLUSTRATIONS')\r\n      // })()\r\n      break\r\n      case 'f':\r\n      (() => {\r\n\r\n      })()\r\n      break;\r\n      default: \r\n      debugger\r\n      console.log('%c%s', 'color: red; font-size: 33px;', 'UNEXPECTED V:', v)\r\n      //err handl\r\n    }\r\n    lastV = v;\r\n  }\r\n  \r\n})\r\n\r\n\r\nexport default socket\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport {Input} from 'antd';\r\nimport {SearchOutlined} from '@ant-design/icons' //< />\r\n\r\nimport './Input.scss'\r\n\r\nconst InputBase = ({width=100, place='main', placeholder, changeHandler, value, readOnly}) => {\r\n  return (\r\n    <Input \r\n      value={value}\r\n      readOnly={readOnly}\r\n      style={{width: width+'%'}}\r\n      //disabled={disabled}\r\n      //prefix={<SearchOutlined />}\r\n      onChange={changeHandler}\r\n      placeholder={placeholder}\r\n      className={classNames('input', 'input__'+place)}\r\n      />\r\n  )\r\n}\r\n\r\nexport default InputBase;","import React from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport {Mentions} from 'antd'\r\nimport {PlusOutlined, DeleteOutlined} from '@ant-design/icons'\r\n\r\nimport './Pod.scss';\r\n\r\nconst Pod = ({actived, label, readOnly, height, onPlus, onDelete, onChoose, showDelete, onAction}) => {\r\n  \r\n  function deleteHandl(ev) {\r\n    ev.stopPropagation()\r\n    showDelete && onDelete(height)\r\n  }\r\n  \r\n  return(\r\n  <div className={classNames('pod', actived ? 'pod-actived' : 'pod-just')} onClick={() => onChoose(height)}>\r\n      <div className='pod__top'>\r\n        <div className='pod__top_height'>\r\n          {height}\r\n        </div>\r\n        {\r\n          !readOnly && \r\n          <div className='pod__top_btns'>\r\n            <div \r\n              className={classNames('pod__top_btns_delete', showDelete ? 'pod__top_btns_delete-show' : 'pod__top_btns_delete-hide')} \r\n              onClick={(ev) => {ev.stopPropagation(); deleteHandl(ev); onAction()}}>\r\n              <DeleteOutlined />\r\n            </div>\r\n            <div className='pod__top_btns_plus' onClick={(ev)=> {ev.stopPropagation();onPlus(height); onAction()}}>\r\n              <PlusOutlined />\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n      <div className={classNames('pod__bottom',actived ? 'pod__bottom-actived' : 'pod__bottom-just')}>\r\n        <Mentions value={label.slice(0, 45)} readOnly rows={2} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pod","import React from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport {Button} from 'antd'\r\n\r\nimport './Button.scss'\r\n\r\nconst ButtonBase = ({children, place='main', clickHandler, isCircle, disabled=false}) => {\r\n\r\n  return(\r\n    <Button \r\n        disabled={disabled}\r\n        shape={isCircle ? \"circle\": null}\r\n        onClick={clickHandler}\r\n        type='primary' \r\n        className={classNames('button', 'button__'+place)}>\r\n        {children}\r\n      </Button>\r\n  )\r\n}\r\n\r\nexport default ButtonBase;","import React from 'react'\r\nimport {Mentions} from 'antd'\r\n\r\nimport './Mentions.scss'\r\n\r\nconst MentionsBase = ({row, placeholder='', changeHandler, value, readOnly=false, disabled}) => {\r\n  return (\r\n    <Mentions \r\n      disabled={disabled}\r\n      readOnly={readOnly}\r\n      value={value}\r\n      onChange={(ev) => {changeHandler(ev); console.log('WTF')}}\r\n      rows={row}\r\n      placeholder={placeholder}\r\n      className='realMentions'\r\n      //disabled={disabled}\r\n      >\r\n  </Mentions>\r\n  )\r\n}\r\n\r\nexport default MentionsBase\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {v4} from 'uuid'\r\n\r\nimport { Tabs } from 'antd';\r\nimport {Mentions, Input, Button} from '@/components'\r\n\r\nimport './Answers.scss'\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n// const initialPanes = [\r\n//   { title: 'Tab 1', content: 'Content of Tab 1', key: '1' },\r\n//   { title: 'Tab 2', content: 'Content of Tab 2', key: '2' },\r\n//   {\r\n//     title: 'Tab 3',\r\n//     content: 'Content of Tab 3',\r\n//     key: '3',\r\n//     closable: true,\r\n//   },\r\n// ];\r\n\r\n// class TabsBase extends React.Component {\r\n//   newTabIndex = 0;\r\n\r\n//   state = {\r\n//     activeKey: initialPanes[0].key,\r\n//     panes: initialPanes,\r\n//   };\r\n\r\n//   onChange = activeKey => {\r\n//     this.setState({ activeKey });\r\n//   };\r\n\r\n//   onEdit = (targetKey, action) => {\r\n//     console.log(`action: ${action}, targetKey:`, targetKey)\r\n//     this[action](targetKey);\r\n//   };\r\n\r\n//   add = () => {\r\n//     const { panes } = this.state;\r\n//     const activeKey = `newTab${this.newTabIndex++}`;\r\n//     const newPanes = [...panes];\r\n//     newPanes.push({ title: 'New Tab', content: 'Content of new Tab', key: activeKey });\r\n//     this.setState({\r\n//       panes: newPanes,\r\n//       activeKey,\r\n//     });\r\n//   };\r\n\r\n//   remove = targetKey => {\r\n//     console.log(\"REMOVE:\", targetKey)\r\n//     const { panes, activeKey } = this.state;\r\n//     let newActiveKey = activeKey;\r\n//     let lastIndex;\r\n//     panes.forEach((pane, i) => {\r\n//       if (pane.key === targetKey) {\r\n//         lastIndex = i - 1;\r\n//       }\r\n//     });\r\n//     const newPanes = panes.filter(pane => pane.key !== targetKey);\r\n//     if (newPanes.length && newActiveKey === targetKey) {\r\n//       if (lastIndex >= 0) {\r\n//         newActiveKey = newPanes[lastIndex].key;\r\n//       } else {\r\n//         newActiveKey = newPanes[0].key;\r\n//       }\r\n//     }\r\n//     this.setState({\r\n//       panes: newPanes,\r\n//       activeKey: newActiveKey,\r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     const { panes, activeKey } = this.state;\r\n//     return (\r\n//       <Tabs\r\n//         type=\"editable-card\"\r\n//         onChange={this.onChange}\r\n//         activeKey={activeKey}\r\n//         onEdit={this.onEdit}\r\n//       >\r\n//         {panes.map(pane => (\r\n//           <TabPane tab={pane.title} key={pane.key} closable={pane.closable}>\r\n//             {pane.content}\r\n//           </TabPane>\r\n//         ))}\r\n//       </Tabs>\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\n// Проблема решается через абсолютное отключение от едитора и работой напрямую с ворк бренчем\r\n// Так же в эдиторе все данные будут динамически редактировать ВБ\r\nconst Answers = ({value, setAnswers, setActiveKey, readOnly}) => {\r\n  // const [tabsData, setTabsData] = useState({\r\n  //   activeKey: '0',\r\n  //   panes: [\r\n  //     { content: '', key: '0', closable: false, ref: '' },\r\n  //     { content: '', key: '1', closable: false, ref: '' },\r\n  //   ]\r\n  // });\r\n  // useEffect(() => {\r\n  //   console.log('RE_RENDER_ANSWERS', branch);\r\n  //   if(tabsData.status === 'start') {\r\n  //     setTabsData({...tabsData, \r\n  //       panes: branch.question ? \r\n  //       (() => {\r\n  //         let res = [],\r\n  //         count = branch.choseCount;\r\n  //         count-=1;\r\n  //         while(count >= 0) {\r\n  //           const {ans, branch: {ref}} = branch['q'+count]\r\n  //           res.unshift({content: ans, key: count+'', closable: false, ref: ''})\r\n  //         }\r\n  //         return res;\r\n  //       })()\r\n  //       : tabsData.panes,\r\n  //       status: 'work'\r\n  //     })\r\n  //   }\r\n  // })\r\n  const Events = {\r\n    addProps: function(arr) {\r\n      return arr.map((el, i) => {\r\n        el.closable = arr.length !== 2;\r\n        el.key = i+'';\r\n        return el;\r\n      })\r\n    },\r\n    remove: function(targetKey) {\r\n      const {panes, activeKey} = value;\r\n      let newActiveKey,\r\n      newPanes,\r\n      workInd;\r\n      for(let i in panes) {\r\n        if(targetKey === panes[i].key) {\r\n          workInd = i;\r\n        }\r\n      }\r\n      newActiveKey = panes[workInd-(targetKey === \"0\" ? 0 : 1)].key\r\n      let firstPart = [...panes].slice(0,+workInd);\r\n      let secondPart = [...panes].slice(+workInd+1);\r\n      newPanes = firstPart.concat(secondPart)\r\n\r\n      newPanes = this.addProps(newPanes);\r\n      setAnswers({\r\n        activeKey: newActiveKey,\r\n        panes: newPanes\r\n      })\r\n      //setTabsData()\r\n    },\r\n    add: function () {\r\n      debugger\r\n      let panes = value.panes\r\n      let newPanes = [...panes].concat({content: \"\", ref: \"\", wayId: v4(), wayColor: 'pink'});\r\n      newPanes = this.addProps(newPanes);\r\n      setAnswers({panes: newPanes, activeKey: newPanes.length-1+'', })\r\n    }\r\n  }\r\n\r\n  function changeHandl(ev) {\r\n    setActiveKey({\r\n      activeKey: ev\r\n    })\r\n  }\r\n\r\n  function editHandl(targetKey, action) {\r\n    Events[action](targetKey);\r\n  }\r\n\r\n  function questionChangeHandl(ev) {\r\n    let newPanes = value.panes;\r\n    newPanes[value.activeKey].content = ev;\r\n    setAnswers({...value, panes: newPanes})\r\n  }\r\n\r\n  function refChangeHandl(ev) {\r\n    ev.persist()\r\n\r\n    let refData = ev.target.value;\r\n    let newPanes = value.panes;\r\n    newPanes[value.activeKey].ref = refData;\r\n    setAnswers({...value,panes: newPanes })\r\n  }\r\n\r\n  const {panes, activeKey} = value;\r\n  debugger\r\n  return (\r\n    <Tabs\r\n      type={readOnly ? 'card' : \"editable-card\"}\r\n      onChange={changeHandl}\r\n      activeKey={activeKey}\r\n      onEdit={editHandl}\r\n      className=''\r\n    >\r\n      {panes.map((pane, i) => (\r\n        <TabPane \r\n          tab={pane.key} \r\n          key={pane.key} \r\n          closable={activeKey === i+'' && pane.closable}>\r\n          {<div style={{margin: \"1px\"}}>\r\n            <Mentions \r\n              readOnly={readOnly} \r\n              row={3} \r\n              placeholder={'Answer..'} \r\n              value={pane.content} \r\n              changeHandler={questionChangeHandl}\r\n              />\r\n            <div className='refToPod'>\r\n              <Input \r\n                readOnly={readOnly} \r\n                value={pane.ref} \r\n                placeholder=\"Ref\" \r\n                changeHandler={refChangeHandl} \r\n                /> \r\n            </div>\r\n            </div>}\r\n        </TabPane>\r\n      ))}\r\n    </Tabs>\r\n  )\r\n}\r\n\r\nexport default Answers","import React, {useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport { Select } from 'antd';\r\n\r\nimport './Select.scss';\r\n\r\nconst {Option} = Select;\r\nconst SelectBase = ({changeHandler, isCreate, isSuper, projects, friends, workPCD, superId, nickName, disabled}) => { //defData, options}) => { //, options\r\n  debugger\r\n  console.log(\"SELECT_IS_READY\");\r\n  //уметь забивать на структурные баги чужого кода надо уметь.\r\n\r\n  // // let options = [];\r\n  // // for (let i = 10; i < 11; i++) {\r\n  // //   const value = `${i.toString(36)}${i}`;\r\n  // //   options.push({\r\n  // //     value,\r\n  // //     disabled: i === 10,\r\n  // //   });\r\n  // // }\r\n  // // let exampleArr = ['Es_ILias'];\r\n \r\n  // // console.log('%c%s', 'color: red; font-size:25px;','EXAMPLE_ARR:', exampleArr);\r\n  // // \r\n  // useEffect(() => {\r\n  //   if(state.dataV !== dataV) {\r\n  //     setState({\r\n  //       defData: accessData\r\n  //         .map(({nickName, superId}) => accessedCreators.includes(superId) ? nickName : null)\r\n  //         .filter(el => el !== null),\r\n  //       options: accessData.map(({nickName, disabled}) => ({value: nickName, disabled})),\r\n  //       dataV\r\n  //     })\r\n  //   }\r\n  // });\r\n  let defData;\r\n  let options =  [  ...[{value: 'all', disabled:false}],\r\n    {value: nickName, disabled: true}]\r\n    .concat(friends.map(({userData:{superId, nickName}}) => ({value: nickName, superId, disabled: false})))\r\n  \r\n\r\n  if(isCreate) {\r\n    // сделай проверку на повторение никнейма и если она срабатывает, то модифицируй ник (1)\r\n    defData = [nickName];\r\n  } else {\r\n\r\n    let projectInd;\r\n    for(let i in projects) {\r\n      if(projects[i].superId === workPCD.projectId) {\r\n        projectInd = i;\r\n      }\r\n    };\r\n\r\n    if(isSuper) {\r\n      defData = superIdToNick(projects[projectInd].superAccess);\r\n    } else {\r\n      defData = superIdToNick(projects[projectInd].access);\r\n    }\r\n  }\r\n\r\n  function superIdToNick(supers) {\r\n    let nicks = [];\r\n    if(supers.includes('all')) {\r\n      nicks.push('all')\r\n    }\r\n    supers.forEach(sup => {\r\n      [{userData:{superId, nickName}}].concat(friends).forEach(({userData: {superId, nickName}}) => {\r\n        if(sup === superId) {\r\n          nicks.push(nickName)\r\n        }\r\n      })\r\n    });\r\n    return nicks\r\n  }\r\n  //const options = [{value: 'Es_ILias', disabled: true}];\r\n  // let defData = accessData.slice()\r\n  // .map(({superId, nickName}) => accessedCreators.includes(superId) ? nickName : null);\r\n  // let options = accessData.map(({nickName, disabled}) => ({value: nickName, disabled}));\r\n\r\n  // const {defData, options} = state;\r\n  console.log('%c%s', 'color: red; font-size:25px;','DEF_DATA:', defData);\r\n  console.log('%c%s', 'color: red; font-size:25px;','OPTIONS:', options);\r\n  // ребилд \r\n  return (\r\n    <Select\r\n      disabled={disabled}\r\n      mode=\"multiple\"\r\n      style={{ width: '100%' }}\r\n      placeholder=\"Please select\"\r\n      defaultValue={defData}\r\n      onChange={changeHandler}\r\n      optionLabelProp=\"label\"\r\n    >\r\n     { options.map(({value, disabled, superId}) => {\r\n       return(\r\n        <Option key={superId} value={value} label={value} disabled={disabled}>\r\n          <div>\r\n            {value}\r\n          </div>\r\n          {/* <div style={{display: 'none'}}>\r\n            {superId}\r\n          </div> */}\r\n       </Option>\r\n       )\r\n     })}\r\n    </Select>\r\n  );\r\n}\r\n\r\nexport default connect(({main: {projects, friends, workPCD, personObj: {userData: {nickName, superId}}}}) => \r\n({projects, friends, workPCD, nickName, superId}), {})(SelectBase)\r\n\r\n{/* {accessData && accessData.map(({superId, nickName, disabled}) => (\r\n        <Option \r\n          disabled={disabled}\r\n          label={nickName}\r\n          value={nickName} \r\n          key={nickName}>\r\n            {nickName}</Option>\r\n      ))} */}","import React from 'react'\r\nimport {Button} from '@/components'\r\n\r\nimport './AddToCompadre.scss'\r\n\r\nconst AddToCompadre = ({nickName, src, projectCount, onAdd, superId}) => {\r\n  return (\r\n    <div className='addTC'>\r\n      {\r\n          src\r\n          ? <div className='addTC__avatar'>\r\n              <img src={src} alt=\"\"/>\r\n            </div>\r\n          : <div className='addTC__avatar_plug'>\r\n              {nickName.substring(0, 2)}\r\n            </div>\r\n      }\r\n      <div className='addTC__data'>\r\n        <div className='addTC__data_nickName'>{nickName}</div>\r\n        <div className='addTC__data_projectCount'>{`Projects: ${projectCount}`}</div>\r\n      </div>\r\n      <div>\r\n        <Button clickHandler={() => onAdd(superId)}>Accept</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddToCompadre;","import React, {useState, useRef, useEffect} from 'react';\r\nimport classNames from 'classnames';\r\nimport { Tag, Upload, message, Select, Tooltip, Popconfirm} from 'antd';\r\n\r\nimport { InboxOutlined, FileAddOutlined, DeleteOutlined} from '@ant-design/icons';\r\n\r\nimport {Mentions, Button, BoxImage, ImageTooltip, CheckTags} from '@/components';\r\n\r\nimport './ArtPart.scss'\r\n\r\nconst { Option } = Select;\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Dragger } = Upload;\r\n\r\nconst ArtPart = (\r\n  {\r\n    value, \r\n    row, \r\n    mentionsHandler, \r\n    fileHandler, \r\n    artSrc, \r\n    illustrations, \r\n    unsetIllust, \r\n    setIllust, \r\n    removeIllust,\r\n    readOnly\r\n  }) => {\r\n  // const wrapperRef = useRef(null);\r\n  // const pictureRef = useRef(null)\r\n  const [workPlace, setWorkPlace] = useState('description');\r\n  const [show, setShow] = useState(false)\r\n  // const [sizes, setSizes] = useState({width: 'auto', height: 'auto'})\r\n  // const [workSrc, setWorkSrc] = useState(null)\r\n  // const [restart, setRestart] = useState(true)\r\n  // const [show, setShow] = useState(false)\r\n\r\n  // Фикс пробликиваний и недорабатывания..\r\n  // useEffect(() => {\r\n  //   // чисто памятник\r\n  //   if(pictureRef.current) {\r\n  //     if(workSrc !== artSrc) {\r\n  //       setWorkSrc(artSrc);\r\n  //       setSizes({width: 'auto', height: 'auto'});\r\n  //       setShow(false);\r\n  //       return\r\n  //     }\r\n\r\n  //     const {naturalHeight: pH, naturalWidth: pW} = pictureRef.current;\r\n  //     const {offsetHeight: wH, offsetWidth: wW} = wrapperRef.current;\r\n  //     if(pH === 0 && pW === 0) {\r\n  //       setRestart(!restart)\r\n  //       return\r\n  //     }\r\n  //     if(sizes.width === sizes.height && (pH !== 0 && pW !== 0)) {\r\n  //       if(pW > pH) {\r\n  //         //width 100% \r\n  //         setSizes({width:'100%', height: 'auto'});\r\n  //       } else {\r\n  //         setSizes({width:'auto', height: '100%'});\r\n  //       }\r\n  //       setShow(true)\r\n  //     }\r\n      \r\n\r\n  //   }\r\n  // });\r\n\r\n\r\n  // function chooseFromExist() {\r\n  //   console.log('CHOOSE_FROM_EXIST');\r\n  //   setArtSrc(illustrations[0]) // сделать здесь полноценные редактор пикч.\r\n  // } \r\n\r\n  let  checkTabsProps = {\r\n    firstVal: 'Description',  \r\n    firstHandler:() => setWorkPlace('description'), \r\n    secondVal: 'Picture', \r\n    secondHandler: () => setWorkPlace('picture'), \r\n    checkData: workPlace === 'description'\r\n  }\r\n\r\n  return (\r\n    <div className='artPart'>\r\n      <div className='artPart__main'>\r\n        <div className={classNames('artPart__main_description', 'artPart__main_description'+(workPlace==='picture'?'-hide':'-show'))}>\r\n          <Mentions \r\n            readOnly={readOnly}\r\n            value={value} \r\n            row={row} \r\n            placeholder={`Arts description`} \r\n            changeHandler={mentionsHandler}/> \r\n        </div>\r\n        <div  className={classNames('artPart__main_picture','artPart__main_picture'+(workPlace==='picture'?'-show':'-hide'))}>\r\n          { typeof artSrc === 'string'\r\n            ? <div className='pictureWrapper'>\r\n                <div className='pictureWrapper__shadow'>\r\n                  <div className='buttonWrapper'>\r\n                    <span className='pictureWrapper__shadow_unset' onClick={(ev) => !readOnly && unsetIllust(ev)}>x</span>\r\n                    <div className='pictureWrapper__shadow_remove'>\r\n                      <Popconfirm placement=\"rightBottom\" title={'Remove this picture'} onConfirm={() => !readOnly && removeIllust(artSrc)} okText=\"Yes\" cancelText=\"No\">\r\n                        <DeleteOutlined style={{color: 'white'}} />\r\n                      </Popconfirm>  \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <BoxImage artSrc={artSrc} />\r\n              </div>\r\n            : <div className='artPart__main_picture_inputs'>\r\n                <input disabled={readOnly} style={{display: 'none'}} name='file' type='file' id='file' onChange={fileHandler} />\r\n                <label htmlFor='file'><FileAddOutlined style={{fontSize: '3vh', color: \"grey\", marginBottom: '1vh', cursor: 'pointer'}} /></label>\r\n                {/* <div className={classNames('artPart__main_picture_inputs_preview', 'artPart__main_picture_inputs_preview'+(show ? '-show' : '-hide'))}>\r\n                  <BoxImage artSrc={artSrc} /> \r\n                </div> */}\r\n                <Select\r\n                  disabled={readOnly}\r\n                  style={{width: '100%'}}\r\n                  showSearch\r\n                  placeholder=\"Select illustration\"\r\n                  >\r\n                  {illustrations.map(({name, src}) => {\r\n                     return <Option>\r\n                      <div className='illustSelect' > \r\n                        <div className='illustSelect__actions' onClick={() => setIllust(src)}>\r\n                          {name}\r\n                        </div>\r\n                        {/* <div className={classNames('illustSelect__preview')}>\r\n                          <div style={{width: '100px', height: '100px', backgroundColor: 'green'}}>22</div>\r\n                        </div> */}\r\n                        {/* <ImageTooltip imageBlock={<BoxImage artSrc={src} />}>\r\n                          \r\n                        </ImageTooltip> */}\r\n                         {/* <div style={{width: '100%', height: '100%'}}>\r\n                          <BoxImage artSrc={src} />\r\n                         </div> */}\r\n                         \r\n                      </div>\r\n                      </Option>\r\n                  })}\r\n                  </Select>\r\n                  {/* <Button clickHandler={chooseFromExist}>Choose from exists</Button> */}\r\n              </div>\r\n          }\r\n        </div>\r\n      </div>\r\n      <CheckTags {...checkTabsProps} />\r\n      {/* <div className='artPart__controllers'>\r\n        <CheckableTag\r\n          checked={workPlace === 'description'}\r\n          onClick={() => workPlace !== 'description' && setWorkPlace('description')}\r\n        >\r\n          Description\r\n        </CheckableTag>\r\n        <CheckableTag\r\n          checked={workPlace === 'picture'}\r\n          onClick={() => workPlace === 'description' && setWorkPlace('picture')}\r\n        >\r\n          Picture\r\n        </CheckableTag>\r\n      </div> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ArtPart","import React, {useState, useEffect, useRef} from 'react'\r\n\r\nimport './BoxImage.scss'\r\n\r\nconst BoxImage = ({artSrc, clickHandler=()=>{}}) => {\r\n  const wrapperRef = useRef(null);\r\n  const pictureRef = useRef(null)\r\n  const [sizes, setSizes] = useState({width: 'auto', height: 'auto'});\r\n  const [workSrc, setWorkSrc] = useState(null);\r\n  const [restart, setRestart] = useState(true);\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // чисто памятник\r\n    debugger\r\n    if(pictureRef.current) {\r\n      if(workSrc !== artSrc) {\r\n        setWorkSrc(artSrc);\r\n        setSizes({width: 'auto', height: 'auto'});\r\n        setShow(false);\r\n        return\r\n      }\r\n\r\n      const {naturalHeight: pH, naturalWidth: pW} = pictureRef.current;\r\n      const {offsetHeight: wH, offsetWidth: wW} = wrapperRef.current;\r\n      if(pH === 0 && pW === 0) {\r\n        setRestart(!restart)\r\n        return\r\n      }\r\n      if(sizes.width === sizes.height && (pH !== 0 && pW !== 0)) {\r\n        if(pW/pH > wW/wH) {\r\n          //width 100% \r\n          setSizes({width:'100%', height: 'auto'});\r\n        } else {\r\n          setSizes({width:'auto', height: '100%'});\r\n        }\r\n        setShow(true)\r\n      }\r\n      \r\n\r\n    }\r\n  });\r\n\r\n  return <div ref={wrapperRef} className='boxImage' onClick={clickHandler} >\r\n    <img style={{opacity: show ? 1 : 0}} ref={pictureRef} width={sizes.width} height={sizes.height} src={workSrc} />\r\n  </div>\r\n}\r\n\r\nexport default BoxImage;","import React from 'react';\r\nimport classNames from 'classnames'\r\n\r\nimport {Tooltip} from 'antd'\r\n\r\nimport './Leaf.scss'\r\n\r\nconst Leaf = ({data, current, clickHandler}) => {\r\n\r\n  function getConnects() {\r\n    debugger\r\n    let connects = [];\r\n    let originBoost = data.branch.boost;\r\n    let i = 0;\r\n    while(i < data.branch.choseCount) {\r\n      let neighbourBoost = data.branch['q'+i].branch.boost;\r\n      if(neighbourBoost > originBoost) {\r\n        connects.push(<div \r\n          style={{bottom: '1.25vh', height: (neighbourBoost-originBoost)*3.5+'vh'}} \r\n          className='leaf__main_connect'></div>)\r\n      } else if(neighbourBoost < originBoost) {\r\n        connects.push(<div \r\n          style={{top: '1.25vh', height: (originBoost-neighbourBoost)*3.5+'vh'}} \r\n          className='leaf__main_connect'></div>)\r\n      }\r\n      i++;\r\n    };\r\n    return connects\r\n  };\r\n \r\n  return <div className='leaf'>\r\n      {\r\n      data && <div className='leaf__tail'></div>\r\n    }\r\n    {\r\n      data ?\r\n      <Tooltip placement=\"bottom\" title={`${data.branch.branchDirection} dir`}>\r\n        <div onClick={clickHandler}  className={classNames('leaf__main', current && 'leaf__main-current')}>\r\n        {data && getConnects()}\r\n        <div className='leaf__main_pods'>\r\n          {data.branch.base.length}\r\n        </div>\r\n        {data.branch.question && \r\n          <Tooltip title={`${data.branch.question.main} Q`}><div className={classNames('leaf__boll', 'leaf__boll-right')}></div></Tooltip>}\r\n        {data.hasOwnProperty('ans') &&\r\n           <Tooltip title={`${data.ans} ANS`}  ><div className={classNames('leaf__boll', 'leaf__boll-left')}></div></Tooltip>}\r\n      </div>\r\n      </Tooltip> \r\n      : null\r\n    }\r\n  \r\n  </div>\r\n}\r\n\r\nexport default Leaf;","import React, {useState} from 'react'\r\n\r\nimport {Mentions, CheckTags} from '@/components';\r\n\r\nimport './Directions.scss';\r\n\r\nconst Directions = ({branchDirection, wayDirection, branchHandler, wayHandler, row, readOnly}) => {\r\n  const [workPlace, setWorkPlace] = useState('branch')\r\n\r\n  function changeHandler(ev) {\r\n    console.log('EV:', ev)\r\n\r\n    workPlace === 'path'\r\n    ? wayHandler(ev)\r\n    : branchHandler(ev)\r\n  } \r\n  let checkTagsProps = {\r\n    firstVal: 'Branch',  \r\n    firstHandler: () => setWorkPlace('branch'), \r\n    secondVal: 'Way', \r\n    secondHandler:() => setWorkPlace('path'), \r\n    checkData: workPlace === 'branch'\r\n  }\r\n\r\n  return (\r\n    <div className='directons'>\r\n      <Mentions \r\n          disabled={workPlace === 'path'}\r\n          readOnly={readOnly}\r\n          value={workPlace === 'path' ? wayDirection : branchDirection}\r\n          row={row}\r\n          placeholder={workPlace === 'path' ? \"Way (SOON)\" : \"Branch dir..\"}\r\n          changeHandler={changeHandler} />\r\n        <CheckTags {...checkTagsProps} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Directions","import React from 'react'\r\n\r\nimport {Tag} from 'antd'\r\n\r\nimport './CheckTags.scss'\r\n\r\nconst { CheckableTag } = Tag;\r\nconst CheckTags = ({firstVal,  firstHandler, secondVal, secondHandler, checkData}) => {\r\n  return (\r\n    <div className='checkTags'>\r\n      <CheckableTag\r\n          checked={checkData}\r\n          onClick={() => !checkData && firstHandler()}\r\n        >\r\n          {firstVal}\r\n        </CheckableTag>\r\n        <CheckableTag\r\n          checked={!checkData}\r\n          onClick={() => checkData && secondHandler()}\r\n        >\r\n          {secondVal}\r\n        </CheckableTag>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckTags","import React from 'react'\r\n\r\nimport './Notes.scss'\r\n\r\nconst Notes = () => {\r\n  return(\r\n    <div className='notes'>\r\n      <div className='notes__plug'>{\"Plan & Scenario (SOON)\"}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notes","// данные прилетают из уже существуюего дерева. Оно инициализируется с созданием проекта.\r\n// Информирование о пустых полях... Формик?...\r\n\r\n// Компонент отвечает за вывод и ввод данных о текущем поде или вопросе. Позволяет переключаться \r\n// Между этими состояниями, а так же переключатся во вложенность вопроса. \r\n// Так же при работе с изображениями все акшены вынесены в тело этого компонента.\r\n\r\n// Возможно это должно быть не здесь, но путь как целостная вещь наследуется по нулевому \r\n// вопросу и базируется на уровне версии.\r\nimport React, {useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport {v4} from 'uuid'\r\n\r\nimport {Mentions, Button, Input, Answers, ArtPart, Directions} from '@/components'\r\nimport {Dropdown, Menu} from 'antd'\r\nimport {mineInd} from '@/utils'\r\n\r\nimport {savePod, changeBranch, changeMaster, setIllustrations} from '@/actions' \r\n\r\nimport {axios, socket} from '@/core'\r\n\r\nconst Editor = (\r\n  {\r\n    savePod, \r\n    workBranch, \r\n    currentHeight, \r\n    changeBranch, v, \r\n    master, \r\n    nickName,\r\n    person,\r\n    workPCD,\r\n    changeMaster, \r\n    illustrations,\r\n    accessed,\r\n    superAccessed,\r\n    wayObj,\r\n    ways,\r\n    setIllustrations, \r\n  }) => {\r\n    debugger\r\n  // проверка на сохранение...\r\n  const [selectedType, setSelectedType] = useState('0'); // 0: POD, 1: QUESTION\r\n  const [data, setData] = useState({ // главное хранилище рабочих данных \r\n    label: \"\",\r\n    mainPart: \"\",\r\n    comment: \"\",\r\n    artsDesription: \"\",\r\n    artSrc: null,\r\n    branchDirection: \"\",\r\n    answers: [],\r\n    activeKey: \"0\",\r\n  })\r\n  const [checkCoord, setCheckCoord] = useState({checkHeight: null, checkPath: null}); // основые маркеры сравнения\r\n  const [saveState, setSaveState] = useState(null) // отвечает за том можно ли переместиться внутрь ответа или нет.\r\n  // Если данные не сохранены появлется не определенность в существовании ответа и баги. В будущем будут автосохранения\r\n  // С подтверждениями критических действий (удалить ответ, ВОПРОС)\r\n\r\nuseEffect(() => {\r\n\r\n  // здесь просходит основная магия ресборки. Сначала проверка на новые данные \r\n  let currentPath = workBranch.pos;\r\n  const {checkHeight, checkPath, checkV} = checkCoord; \r\n  \r\n  // надо добавить марке сравнения по проектам, хотя с этой работой справляется V\r\n  // последним звеном в проверке является фильтрация на V диспатч с изменением мастера, смотри описание eventHandl\r\n\r\n  if(workBranch.branch.base && ((currentHeight !== checkHeight) || (currentPath !== checkPath) || (v !== checkV && v[0] !== 'a'))) {\r\n    \r\n    // возможно некоторые проверки (чек данные ) рудиментарны..\r\n    // выбор источника данных (вопрос или база) на основе данных PCD данных (чекни коннект)\r\n    \r\n    let dataSource = currentHeight !== 'question' ? workBranch.branch.base[currentHeight] : workBranch.branch.question;\r\n    debugger  \r\n    const {label, main, comment, picture: {src, alt}} = dataSource;  \r\n\r\n      // стандарный, пустой пак вопрос, который подставляется, если под не вопрос\r\n      // по факту просто заглушка для того, что бы было что подставить\r\n      // при переключении на вопрос\r\n\r\n      let answers = [ \r\n        { content: '', key: '0', closable: false, ref: '' }, // wayId: wayObj.wayId, wayColor: wayObj.color\r\n        { content: '', key: '1', closable: false, ref: '' }, // wayId: v4(), wayColor: 'grey'\r\n      ];\r\n      \r\n        // объявлены просто что бы было удобней вытаскивать\r\n        let realWorkBranch = workBranch.branch; \r\n        let choseCount = realWorkBranch.choseCount;\r\n\r\n        // если все такие есть вопросы, значит есть и ответы, которые нужно вытащить и закинуть в рабочую область\r\n        if(choseCount) { \r\n\r\n          let newAnswers = []\r\n\r\n          // формирование правильного ключа и создание нового массива ответов\r\n          for(let i = 0; i < choseCount; i++) {\r\n\r\n            let natKey = 'q'+i\r\n            let {ans, branch: {ref, wayId}} = realWorkBranch[natKey];\r\n\r\n            // let wayInd=[];\r\n            // mineInd(ways,wayId,'wayId',wayInd)\r\n\r\n            newAnswers.push({content: ans, key: i+'', closable: choseCount > 2, ref: ref ? ref : ''}) // wayId, color: ways[wayInd[0]].color\r\n          }\r\n          answers = newAnswers;\r\n        }\r\n      // подстановка существующих данных\r\n      setData({\r\n        label, \r\n        mainPart: main, \r\n        comment, \r\n        artsDesription: alt,\r\n\r\n        // проверка на удаленную картинку => при следующем сохранении данные будут перезаписаны.\r\n        artSrc: illustrations.some(({src: baseSrc}) => baseSrc === src) ? src : null,\r\n        answers,\r\n        activeKey: \"0\",\r\n        branchDirection: workBranch.branch.branchDirection,\r\n        // wayDirection: wayObj.wayDirection\r\n      });\r\n      setCheckCoord({checkHeight: currentHeight, checkPath: currentPath, checkV: v});\r\n      setSelectedType(currentHeight !== 'question' ? \"0\" : \"1\");\r\n      setSaveState(workBranch.v)\r\n  }\r\n})\r\n\r\n  let noMaster = master === null;\r\n\r\n  function masterHandl() {\r\n\r\n    // работой с переменной мастера, установка, отдача и запрос права у владельца права в комнате.\r\n    debugger\r\n    noMaster && changeMaster(true);\r\n    if(master === nickName) {\r\n      changeMaster(false)\r\n    } else {\r\n      // masterRequst   \r\n      socket.emit('REQUEST_RIGHT', {token: localStorage.token, person})\r\n    }\r\n    \r\n  }\r\n\r\n  function eventHandl(cb = null) {\r\n    \r\n    // мидл, который отлавливает действия для автоматического включения мастера и десейва.\r\n\r\n    // при включении мастера происходит диспатч с сайд эффектом от V, который улетает \r\n    // в виде сокет запроса на сервер и информирует всех, кто в комнате о изменении мастера на каком - либо\r\n    // проекте. Здесь при изменении мастера я локально сетую его и игнорю изменения связанные с мастером, тем самым не\r\n    // перерисовываю данные. Делается это для того что бы первый клик был услышан и сохранился в виде данных в основном \r\n    // хранилище, а иначе оно просто перерисуется с пустыми или старыми данными. \r\n\r\n    // можно чекать те данные которые уже имеются, но тогда нужно интегрировать проверки.. \r\n    // которые улетят на ребилд с полным переосмыслением рабочего процесса и архитектуры.\r\n    debugger\r\n    setSaveState(false);\r\n    noMaster && changeMaster(true);\r\n    cb && cb()\r\n  }\r\n\r\n  function fileHandler(ev) {\r\n\r\n    // работа с картинкой, которая прилетает из вне. Как только это происходит она автоматически назначается как рабочая\r\n    // и сохраняется на яндекс диске \r\n\r\n    ev.persist();\r\n    debugger\r\n    let formData = new FormData();\r\n    let workFile = ev.target.files[0];\r\n    let dataType = workFile.name.substring(0).split('.');\r\n    let newName = `${v4()}.${dataType[dataType.length-1]}`;\r\n\r\n    formData.append('picture', workFile, workFile.name);\r\n\r\n    // отправка форм даты с соотвествующим контент тайпом\r\n\r\n    axios.post('/image', formData, {\r\n      headers: { 'Content-Type': \"multipart/form-data\", 'newname': newName}\r\n    }).then(({data: src}) => {\r\n\r\n      // пример рабочей бездиспатчевой логики \r\n\r\n      let newIllustration = {name: ev.target.files[0].name, src}\r\n      socket.emit('SET_ILLUSTRATIONS', {token: localStorage.token, person, workPCD, newIllustration, action: 'ADD'})\r\n      setData({...data, artSrc: src });\r\n\r\n      //!!! добавить знатный денжер о всех последствиях удаления картинки\r\n\r\n    })\r\n  }\r\n\r\n  function setIllust(src = null) {\r\n\r\n    // работа с тем, что будет или небудет показано\r\n\r\n    setData({...data, artSrc: src})\r\n  }\r\n\r\n  function removeIllust(src) { //!!!--- Еще одно исключение??? РЕбилдни логику на съедание сендер эвента\r\n    \r\n    // удаление картинки, как из пакета иллюстраций так и с яндекс диска\r\n    \r\n    setData({...data, artSrc: null});\r\n    let workIllust;\r\n    for(let picture of illustrations) {\r\n      if(picture.src === src) {\r\n        workIllust = picture\r\n      }\r\n    }\r\n    socket.emit('SET_ILLUSTRATIONS', {token: localStorage.token, person, workPCD, newIllustration: workIllust, action: 'REMOVE'})\r\n  }\r\n\r\n  function typeBtnHandler() {\r\n\r\n    // смотри описание эвент хендлера ( eventHandl )\r\n\r\n    eventHandl(setSelectedType(selectedType === \"0\" ? \"1\" : \"0\"));\r\n    \r\n  }\r\n\r\n  const {label, mainPart, comment, artsDesription, branchDirection, wayDirection: cWayDirection, answers, activeKey, artSrc} = data;\r\n  return (\r\n    <>\r\n      <div className='editor__left'>\r\n        <div style={{display: 'flex'}}>\r\n          <div className='editor__left_dropMenu'>\r\n          <Button disabled={!accessed} clickHandler={() => {\r\n             currentHeight !== null && (workBranch.branch.choseCount === 0 || currentHeight === 'question') && typeBtnHandler();\r\n          }}>\r\n            {selectedType === '0' ? \"POD\" : \"QUESTION\"}\r\n          </Button>\r\n            \r\n          </div>\r\n          <div className='editor__left_label'>\r\n            <Input readOnly={!accessed} value={label} placeholder='Label' changeHandler={(ev) => {ev.persist(); setData({...data, label: ev.target.value}); eventHandl()}} />\r\n          </div>\r\n        </div>\r\n        <div className='editor__left_dialog'>\r\n          <Mentions readOnly={!accessed} value={mainPart} row={10} placeholder='Main part' changeHandler={ev => {setData({...data, mainPart: ev}); eventHandl()}}/>\r\n        </div>\r\n        <div className='editor__left_comment'>\r\n          <Mentions readOnly={!accessed} value={comment} row={6} placeholder='Comment/analysis' changeHandler={ev => {setData({...data, comment: ev}); eventHandl()}}/>\r\n        </div>\r\n        <div className={classNames('editor__left_tabs','editor__left_tabs'+ (selectedType === '1' ? '-show' : '-hide'))}>\r\n          <Answers \r\n            readOnly={!accessed}\r\n            setAnswers={({activeKey, panes: answers}) => {setData({...data, answers, activeKey}); eventHandl()}} \r\n            setActiveKey={({activeKey}) => setData({...data, activeKey})}  \r\n            value={{panes: answers, activeKey}}/>\r\n          {workBranch.branch['q'+activeKey] && saveState && \r\n          <div className={classNames('editor__left_tabs_cross')}>\r\n            <Button clickHandler={() => {changeBranch(+activeKey)}}>CROSS</Button>\r\n          </div>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='editor__right'>\r\n        <div style={{display: 'flex'}}>\r\n          <div className='editor__right_master'>\r\n            <div className='editor__right_master_status'>\r\n              {`M: ${master}`}\r\n            </div>\r\n            <div className='editor__right_master_btn'>\r\n              <Button disabled={!superAccessed} clickHandler={masterHandl}>\r\n                {noMaster \r\n                ? \"Stay master\" \r\n                : master === nickName \r\n                  ? \"Give away right\" \r\n                  : \"Request the right\"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <div className='editor__right_save'>\r\n            <div className='editor__right_save_info'>{!saveState && <div>*</div>}</div>\r\n            <div className='editor__right_save_btn'>\r\n              <Button disabled={!accessed}  clickHandler={() => {savePod({selectedType, data}); setSaveState(true)}}>\r\n                SAVE\r\n              </Button>\r\n            </div>\r\n          </div>  \r\n        </div>\r\n        <div className='editor__right_dialog'>\r\n          <ArtPart \r\n            readOnly={!accessed} \r\n            artSrc={artSrc}\r\n            value={artsDesription} \r\n            row={10} \r\n            mentionsHandler={ev => {setData({...data, artsDesription: ev}); eventHandl()}}\r\n            fileHandler={fileHandler}\r\n            illustrations={illustrations}\r\n            unsetIllust={setIllust}\r\n            setIllust={setIllust}\r\n            removeIllust={removeIllust}\r\n            />\r\n          {/* <Mentions  row={10} placeholder={`Arts description`} changeHandler={}/> */}\r\n        </div>\r\n        <div className='editor__right_branchDir'>\r\n          <Directions \r\n            readOnly={!accessed} \r\n            row={7}\r\n            wayHandler={() => ({})}\r\n            branchHandler={ev => {setData({...data, branchDirection: ev}); eventHandl();}}\r\n            wayDirection={cWayDirection}\r\n            branchDirection={branchDirection}/>\r\n          {/* <Mentions \r\n            value={branchDirection} \r\n            row={7} \r\n            placeholder={`Branches direction`} \r\n            changeHandler={ev => {; eventHandl()}}/> */}\r\n        </div>\r\n        <div className={classNames('editor__right_metaData', 'editor__right_metaData'+(selectedType === '1' ? '-show' : '-hide'))}>\r\n          <Mentions disabled={true} row={6} placeholder={\"Meta data (SOON)\"}/>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect(({main: {workBranch, workPCD, projects, personObj, workPerson}}) => {\r\n\r\n  // мастер дата - информация о присутствии какого - либо чела за работой над версией. Используется для того\r\n  // Что бы локать возможность редачить дригим персонажам, которые сейчас просматривают проект, а иначе нужно буфферить\r\n  // То что воводит один, отправляет другой. В общем исключаются другие источники истины, кроме рабочего чела.\r\n  debugger\r\n  let projectInd = [];\r\n  let versionInd = [];\r\n  let master = null;\r\n  let wayObj = null; // EXP режим, исправить на '';\r\n  let accessed = false;\r\n  let superAccessed = false;\r\n  const nickName = personObj.userData.nickName;\r\n  if(workPCD !== null) {\r\n    // в мастере будет никнейм \r\n    mineInd(projects, workPCD.projectId, 'superId', projectInd);    \r\n    mineInd(projects[projectInd[0]].versions, workPCD.workVersion, 'superId', versionInd);\r\n    master = projects[projectInd[0]].versions[versionInd[0]].master;\r\n\r\n  \r\n    \r\n    const targetAccess = projects[projectInd[0]].superAccess;\r\n    superAccessed = targetAccess.includes(personObj.userData.superId) || targetAccess.includes('all')\r\n\r\n    if(superAccessed) {\r\n      if(master === null || master === nickName) {\r\n        accessed = true;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  //let wayInd = [];\r\n  //mineInd(projects[projectInd[0]].versions[versionInd[0]].ways, workBranch.wayId, 'wayId', wayInd);\r\n  //wayObj = projects[projectInd[0]].versions[versionInd[0]].ways[wayInd[0]];\r\n  // я не должен думать, есть ли здесь эти данные.... \r\n  \r\n  \r\n  return {\r\n    master,\r\n    illustrations:workPCD ? projects[projectInd[0]].versions[versionInd[0]].illustrations : [],\r\n    nickName,\r\n    //wayObj, \r\n    v: workBranch.v,\r\n    workBranch,\r\n    person: workPerson,\r\n    workPCD,\r\n    accessed,\r\n    superAccessed,\r\n    //ways: projects[projectInd[0]].versions[versionInd[0]].ways[wayInd[0]],\r\n    paths:workPCD ? projects[projectInd[0]].versions[versionInd[0]].paths : [],\r\n    currentHeight: workPCD ? workPCD[workPCD.workVersion].height : null, // обертка для поддержания первичной логики\r\n  }\r\n}, {savePod, changeBranch, changeMaster, setIllustrations})(Editor)","import React, {useState, useEffect}  from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {socket} from '@/core'\r\nimport {mineInd} from '@/utils'\r\n\r\nimport {Mentions, Dropdown, Button, Input, AccessSelect} from '@/components'\r\nimport {Select} from 'antd'\r\nimport {DeleteOutlined} from '@ant-design/icons';\r\n\r\nimport {addProject, setupProject, saveVersion} from '@/actions'\r\n\r\nconst Project = (\r\n  {\r\n    addProject, \r\n    friends, \r\n    nickName, \r\n    personSId, \r\n    projects, \r\n    workPCD, \r\n    isSetup, \r\n    setupProject,\r\n    workPerson,\r\n    versionComment,\r\n    isOwner,\r\n    saveVersion\r\n  }) => {\r\ndebugger\r\n\r\nconst [projectData, setProjectData] = useState({name: '', description: '', access: [], superAccess: []});\r\nconst [versionData, setVersionData] = useState({comment: ''})\r\n  useEffect(() => {\r\n    let {access, superAccess} = projectData;\r\n    if(!access.length || !superAccess.length) {\r\n      if(isSetup) {\r\n        // подъем уже существующих данных\r\n        let projectInd;\r\n        for(let i in projects) {\r\n          if(projects[i].superId === workPCD.projectId) {\r\n            projectInd = i;\r\n          }\r\n        };\r\n        const {access, superAccess, name, description} = projects[projectInd];\r\n        setProjectData({\r\n          name,\r\n          description,\r\n          access,\r\n          superAccess\r\n        })\r\n      } else {\r\n        //инициализация почти пустых аксессов\r\n        setProjectData({\r\n          ...projectData,\r\n          access: [personSId],\r\n          superAccess: [personSId],\r\n        })\r\n      }\r\n    };\r\n    if(isSetup && !versionData.comment.length) {\r\n      setVersionData({ comment: versionComment })\r\n    }\r\n  })\r\n\r\n  function nameHandl(ev) {\r\n    ev.persist()\r\n    console.log(ev.target.value)\r\n    setProjectData({\r\n      ...projectData,\r\n      name: ev.target.value+'',\r\n    })\r\n  }\r\n\r\n  function descriptionHandl(ev) {\r\n    setProjectData({\r\n      ...projectData,\r\n      description: ev+''\r\n    })\r\n  }\r\n\r\n  // ПОвторяющиеся никнеймы локаются.\r\n  function getSuperId(nicks) {\r\n    let superIdArr = [];\r\n    if(nicks.includes('all')) {\r\n      superIdArr.push('all')\r\n    }\r\n    nicks.forEach(nick => {\r\n      friends.forEach(({userData: {superId, nickName}}) => {\r\n        if(nick === nickName) {\r\n          superIdArr.push(superId)\r\n        }\r\n      })\r\n    });\r\n    return superIdArr\r\n  }\r\n\r\n  function createOrSaveHandler() {\r\n    //changeMaster(false)\r\n    isSetup && setupProject(projectData);\r\n    !isSetup && addProject(projectData)\r\n  }\r\n\r\n  function deleteHandler(target) {\r\n    \r\n    socket.emit('DELETE', {token: localStorage.token, workPCD, workPerson, target});\r\n  };\r\n  \r\n  function versionHandler(ev) {\r\n    ev.persist();\r\n    console.log(ev.target.value);\r\n    setVersionData({comment: ev.target.value})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='project__upPart'>\r\n        <div className='project__upPart_input'>\r\n          <Input readOnly={!isOwner} placeholder='name' changeHandler={nameHandl} value={projectData.name}/>\r\n        </div>\r\n        <div className='project__upPart_space' />\r\n        <div className='project__upPart_createBtn'>\r\n          <Button disabled={!isOwner} clickHandler={createOrSaveHandler}>\r\n            {isSetup ? \"SAVE PROJECT\" : \"CREATE\"}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className='project__bottomPart'>\r\n        <div className='project__bottomPart_description'>\r\n          <Mentions readOnly={!isOwner} value={projectData.description} row={2} placeholder='description' changeHandler={descriptionHandl}/>\r\n        </div>\r\n        <div className='project__bottomPart_access'>\r\n          <p>Юзеры, которые могут просматривать проект:</p>\r\n          <AccessSelect \r\n              disabled={!isOwner}\r\n              isCreate={isSetup === false}\r\n              isSuper={false}\r\n              changeHandler={(nickNames) => setProjectData({...projectData, access: [projectData.access[0]].concat(getSuperId(nickNames))}) } \r\n            />\r\n        </div>\r\n        <div className='project__bottomPart_access'>\r\n          <p>Юзеры, которые могут создавать новые версии и редактировать другие, при возможности:</p>\r\n          <AccessSelect \r\n              disabled={!isOwner}\r\n              isCreate={isSetup === false}\r\n              isSuper={true}\r\n              changeHandler={(nickNames) => setProjectData({...projectData, superAccess: [projectData.superAccess[0]].concat(getSuperId(nickNames))})} \r\n            />\r\n        </div>\r\n        {\r\n          isSetup && isOwner && <div className='project__bottomPart_delete'>\r\n            <div className='project__bottomPart_delete_space'></div>\r\n            <div className='project__bottomPart_delete_btn'>\r\n              <Button  clickHandler={() => deleteHandler('project')}><DeleteOutlined/> DELETE PROJECT</Button>\r\n            </div>\r\n          </div>\r\n        }\r\n        <div className='handler'>VERSION PART</div>\r\n        {\r\n          isSetup && <div className='project__versionPart'>\r\n            <div className='project__versionPart_top'>\r\n              <div className='project__versionPart_top_comment'>\r\n                <Input placeholder='name' changeHandler={versionHandler} value={versionComment} />\r\n              </div>\r\n              <div className='project__versionPart_top_space'>\r\n              </div>\r\n              <div className='project__versionPart_top_save'>\r\n                <Button clickHandler={saveVersion}>SAVE VERSION</Button>\r\n              </div>\r\n            </div>\r\n            {\r\n              isOwner && \r\n              <div className='project__versionPart_bottom'>\r\n                <div className='project__versionPart_bottom_space'>\r\n                </div>\r\n                <div className='project__versionPart_bottom_deleteBtn'>\r\n                  <Button clickHandler={() => deleteHandler('version')}><DeleteOutlined/> DELETE VERSION </Button>\r\n                </div>\r\n              </div>\r\n            }\r\n            \r\n          </div>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect(({main: {\r\n  friends, \r\n  projects,\r\n  workPCD,\r\n  workPerson,\r\n  personObj: {\r\n    userData: {\r\n      nickName, \r\n      superId: personSId}\r\n    }}}, {isSetup}) => {\r\n      let res = {\r\n        friends, \r\n        nickName, \r\n        personSId, \r\n        projects, \r\n        workPCD, \r\n        workPerson\r\n      };\r\n      if(isSetup && workPCD) {\r\n        let projectInd = [];\r\n        let versionInd = [];\r\n        mineInd(projects, workPCD.projectId, 'superId', projectInd);\r\n        mineInd(projects[projectInd[0]].versions, workPCD.workVersion, 'superId', versionInd);\r\n\r\n        // const targetAccess = projects[projectInd[0]].superAccess;\r\n        // if(targetAccess.includes(personObj.userData.superId) || targetAccess.includes('all')) {\r\n        //   if(master === null || master === nickName) {\r\n        //     accessed = true;\r\n        //   }\r\n        // }\r\n\r\n        res.versionComment = projects[projectInd[0]].versions[versionInd[0]].comment;\r\n        \r\n      };\r\n      res.isOwner = workPerson === personSId;\r\n      return res\r\n      \r\n    }, {addProject, setupProject, saveVersion})(Project)","import React, {useState}  from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {Mentions, Dropdown, Button, Input} from '@/components'\r\n\r\nimport {addVersion} from '@/actions'\r\n\r\nconst Version = ({addVersion}) => {\r\n\r\nconst [projectData, setProjectData] = useState({comment: '', description: ''})\r\n\r\n  function nameHandl(ev) {\r\n    ev.persist()\r\n    console.log(ev.target.value)\r\n    setProjectData({\r\n      ...projectData,\r\n      comment: ev.target.value+''\r\n    })\r\n  }\r\n\r\n  function descriptionHandl(ev) {\r\n    setProjectData({\r\n      ...projectData,\r\n      description: ev+''\r\n    })\r\n  }\r\n\r\n  function sumbitHandl() {\r\n    addVersion(projectData)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='version__input'>\r\n        <Input placeholder='comment' changeHandler={nameHandl}/>\r\n      </div>\r\n      <div className='version__space' ></div>\r\n      <div className='version__createBtn'>\r\n        <Button clickHandler={sumbitHandl}>\r\n          CREATE\r\n        </Button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect(({}) => ({}), {addVersion})(Version)","import React, {useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {socket} from '@/core'\r\nimport store from '@/store'\r\n\r\nimport {Input, Button, AddToCompadre} from '@/components';\r\nimport {Select} from 'antd'\r\nimport {openNotification, mineInd} from '@/utils'\r\n\r\nimport {choosePerson, updateUsers, previewPerson, cleanApplicantList, updateData, changeMaster} from '@/actions'\r\n\r\nconst {Option} = Select\r\n\r\nconst Social = (\r\n  {\r\n    friends, \r\n    superId, \r\n    choosePerson, \r\n    applicantList, \r\n    cleanApplicantList, \r\n    updateData, \r\n    changeMaster,\r\n    workPerson, \r\n    previewPerson, \r\n    updateUsers\r\n  }) => {\r\n  // возможность работать с челом в зависимости от доступов с его стороны...\r\n  const [person, setPerson] = useState(null);\r\n  const [personDetail, setPersonDetail] = useState(null);\r\n  const [users, setUsers] = useState(null);\r\n  const [newComrade, setNewComrade] = useState([]);\r\n\r\n  let isFriend = person ? person.friends.some(({superId:personId}) => personId === superId) : null;\r\n\r\n  useEffect(() => {\r\n    if(users === null) {\r\n      socket.emit('GET_USERS', {token: localStorage.token});\r\n      socket.on('NEW_USERS', ({users: newUsers}) => setUsers(newUsers))\r\n    }\r\n    if(person && !isFriend && (!personDetail || (personDetail.userData.superId !== person.superId))) {\r\n      socket.emit('GET_USERS_DETAIL', {token: localStorage.token, personId: person.superId});\r\n      socket.on('NEW_USERS_DETAIL', ({user}) => {\r\n        console.log(\"MAIN_SOCIAL_EVENT\")\r\n        setPersonDetail(user)\r\n      })\r\n    } else if(person && (!personDetail || (personDetail.userData.superId !== person.superId))) {\r\n      //is Friend\r\n      let friendInd;\r\n      for(let i in friends) {\r\n        if(friends[i].userData.superId === person.superId) {\r\n          friendInd = i;\r\n        }\r\n      }\r\n      setPersonDetail(friends[friendInd]);\r\n    };\r\n    if(applicantList.length !== newComrade.length) {\r\n      socket.emit('GET_COMRADE_DETAIL', {token: localStorage.token});\r\n      socket.on('NEW_COMRADE_DETAIL', ({comrades}) => {\r\n        console.log(`ALlenght: ${applicantList.length} newComrade.length: ${newComrade.length}`)\r\n        setNewComrade(comrades)\r\n      })\r\n    };\r\n    return function() {\r\n\r\n      const {main: {mainPlace, workPerson, personObj: {userData: {superId}}}} = store.getState();\r\n      if(person && superId === workPerson && mainPlace !== 'social') {\r\n        socket.emit('UNSUBSCRIBE_USER', {token: localStorage.token, personId: person.superId});\r\n      }\r\n\r\n    }\r\n  })\r\n\r\n  function onSelectUser(nickName) {\r\n    let userInd = [];\r\n    mineInd(users, nickName, 'nickName', userInd);\r\n\r\n    setPerson(users[userInd[0]])\r\n  };\r\n  function onSelectFriend(nickName) {\r\n    // ИНТЕГРИРУЙ сюда луп, который будет получать FRESH данные и сразу же обновлять.\r\n    // нет нет. При клике происходит подъем последних данных и подписывание на ВСЕ изменения. Не нужны лупы.\r\n    let friendInd = []; \r\n    mineInd(friends, nickName, ['userData', 'nickName'], friendInd);\r\n    \r\n    socket.emit('SUBSCRIBE_USER', {\r\n      token: localStorage.token, \r\n      personId: friends[friendInd[0]].userData.superId\r\n    });\r\n    socket.on('NEW_SUBSCRIBE_USER', ({friendObj}) => {\r\n      updateData({data: friendObj, address: 'friend'});\r\n      setPerson(friendObj.userData)\r\n    })\r\n  };\r\n\r\n  function onSendRequest() {\r\n    socket.emit('FRIEND_REQUEST', {token: localStorage.token, person})\r\n  };\r\n\r\n  let availableProjects = personDetail && personDetail.projects.filter(({access}) => access.includes(superId) || access.includes('all') )\r\n\r\n  function chooseHandler() {\r\n    if(availableProjects.length && isFriend) {\r\n\r\n      // Это делается, потому что этот чел мог что то настроить за время раздумий, а я спецем \r\n      // не обрабатывал эти вызовы.. (причина в необходимости перестраивать пол редюсера) так что \r\n      // дополнительный запрос;\r\n      socket.emit('SUBSCRIBE_USER', {\r\n        token: localStorage.token, \r\n        personId: personDetail.userData.superId\r\n      });\r\n      socket.on('NEW_SUBSCRIBE_USER', ({friendObj}) => {\r\n        changeMaster(false);\r\n        updateData({data: friendObj, address: 'friend'});\r\n        choosePerson(person.superId);\r\n      })\r\n\r\n\r\n \r\n      //!isFriend && previewPerson(personDetail);\r\n    } else {\r\n      openNotification({type: 'warning', message: 'Restriction', description: 'The user must have at least one project'})\r\n    }\r\n  };\r\n  function addCompadreHandl(superId) {\r\n    socket.emit('ACCEPT_REQUEST', {token:localStorage.token, personId: superId});\r\n    cleanApplicantList(superId);\r\n    setNewComrade(newComrade.filter(({superId:personId}) => personId !== superId ));\r\n  }\r\n\r\n  let postData = new FormData();\r\n\r\n  let personDetailIsLoaded = personDetail && (personDetail.userData.superId === person.superId);\r\n\r\n  return (\r\n    <>\r\n      <div className='social__chusedUser'>\r\n        {\r\n          person \r\n          ? <div className='social__chusedUser--WRAPPER'>\r\n              <div className='social__chusedUser_showProfile'>\r\n                {\r\n                  setPerson.src\r\n                  ? <div className='social__chusedUser_showProfile_avatar'>\r\n                      <img src={setPerson.src} alt=\"\"/>\r\n                    </div>\r\n                  : <div className='social__chusedUser_showProfile_avatar_plug'>\r\n                      {person.nickName.substring(0, 2)}\r\n                    </div>\r\n                }\r\n              </div>\r\n              {\r\n                isFriend &&\r\n                <div className='social__chusedUser_chuseProfile'> \r\n                  <Button clickHandler={() => {chooseHandler()}}>Choose profile</Button>\r\n                </div> \r\n              }\r\n              \r\n              { \r\n                !isFriend && \r\n                <div className='social__chusedUser_addToFriend'>\r\n                  <Button clickHandler={onSendRequest}>Add to comrades</Button>\r\n                </div>\r\n              }\r\n              <div className='social__chusedUser_projectCount'>\r\n                {personDetail && `Count of available projects: ${availableProjects.length}`}\r\n              </div>\r\n            </div>\r\n          : <div className='social__chusedUser_plug'>\r\n            Selected person\r\n          </div>\r\n        }\r\n      </div>\r\n      {\r\n        users &&  <div className='social__findUser'>\r\n        <Select\r\n          showSearch\r\n          style={{ width: '100%' }}\r\n          placeholder=\"Users\"\r\n          onSelect={onSelectUser}\r\n        >\r\n          {\r\n           users.map(({nickName}) => <Option value={nickName}>{nickName}</Option>)\r\n          }\r\n      \r\n        </Select>\r\n      </div>\r\n      }\r\n      <div className='social__findFriend'>\r\n        <Select\r\n          showSearch\r\n          style={{ width: '100%' }}\r\n          placeholder=\"Friends\"\r\n          onSelect={onSelectFriend}\r\n        >\r\n          {\r\n           friends.length && friends.map(({userData: {nickName}}) => <Option value={nickName}>{nickName}</Option>)\r\n          }\r\n        </Select>\r\n      </div>\r\n      <div className='social__requestToFriend'>\r\n        {\r\n          newComrade.length\r\n          ? <div className='social__requestToFriend_list'>\r\n              {newComrade.map(({nickName, src, projectCount, superId}) => {\r\n                return <AddToCompadre onAdd={addCompadreHandl} nickName={nickName} src={src} projectCount={projectCount} superId={superId} />\r\n              })}\r\n            </div>\r\n          : <div className='social__requestToFriend_plug'>\r\n              No requests\r\n            </div>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect((\r\n  {\r\n    main: {\r\n      friends, \r\n      personObj: {userData: {superId, applicantList}}, accessV, workPerson, friendV\r\n    }}) => (\r\n      {\r\n        friends, \r\n        superId, \r\n        applicantList, \r\n        L: applicantList.length, \r\n        fL: friends.length,\r\n        workPerson, \r\n        accessV, \r\n        friendV\r\n      }), \r\n{choosePerson, updateUsers, previewPerson, cleanApplicantList, updateData, changeMaster})(Social)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {socket} from '@/core'\r\n\r\nimport {Button} from '@/components'\r\n\r\nimport {logOut} from '@/actions'\r\n\r\nimport './Profile.scss'\r\n\r\nconst Profile = ({logOut}) => {\r\n\r\n  function logoutHandler () {\r\n    socket.emit('LOGOUT', {token: localStorage.token});\r\n    logOut()\r\n  }\r\n\r\n  return (\r\n    <div className='profile'>\r\n      <div className='profile__firstLine'>\r\n        <div className='profile__firstLine_space'>\r\n        </div>\r\n        <div className='profile__firstLine_btn'>\r\n          <Button clickHandler={logoutHandler}>LOGOUT</Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(() => ({}), {logOut})(Profile)","import React, {useState, useRef, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport classNames from 'classnames';\r\nimport anime from 'animejs'\r\nimport {\r\n  CSSTransition,\r\n  TransitionGroup,\r\n} from 'react-transition-group';\r\n\r\nimport {Button} from '@/components'\r\nimport {Editor, Project, Version, Social} from './elements'\r\nimport Profile from './Profile'\r\n\r\nimport {openPlace} from '@/actions'\r\n\r\nimport './Main.scss';\r\n\r\nconst Main = ({mainPlace, openPlace}) => {\r\n  // интегрируй роутер\r\n  const [component, setComponent] = useState([{name: null, payload: <div></div>}]);\r\n  debugger\r\n  useEffect(() => {\r\n    if(component[0].name !== mainPlace) {\r\n      let newPayload;\r\n      switch(mainPlace) {\r\n        case 'editor':\r\n          newPayload = (\r\n            <div className={classNames('editor')}>\r\n              <Editor />\r\n            </div>\r\n          )\r\n        break;\r\n        case 'project':\r\n          newPayload = (\r\n            <div className={classNames('project')}>\r\n              <Project isSetup={false} />\r\n            </div>\r\n          )\r\n        break;\r\n        case 'version':\r\n          newPayload = (\r\n            <div className={classNames('version')}>\r\n              <Version />\r\n            </div>\r\n          )\r\n        break;\r\n        case 'setup':\r\n          newPayload = (\r\n            <div className={classNames('project')}> \r\n              <Project isSetup={true} />\r\n            </div>\r\n          )\r\n        break;\r\n        case 'beginner':\r\n          newPayload = (\r\n            <div className={classNames('beginner')}>\r\n              <Button clickHandler={() => openPlace('project')}>CREATE YOUR FIRST PROJECT</Button> \r\n            </div>\r\n          )\r\n        break\r\n        case 'social':\r\n          newPayload = (\r\n            <div className={classNames('social')}>\r\n              <Social />\r\n            </div>\r\n          );\r\n        break\r\n        case 'choose':\r\n          newPayload = (\r\n            <div className='choose'>\r\n              Choose project\r\n            </div>\r\n          )\r\n        break\r\n        case 'error':\r\n          newPayload = (\r\n            <div className='error'>\r\n              Project, version or pod was deleted, rechoose project.\r\n            </div>\r\n          )\r\n        break\r\n        case 'profile': \r\n        newPayload = (\r\n          <div className='profile'>\r\n            <Profile />\r\n          </div>\r\n        )\r\n        break\r\n        default:\r\n\r\n      }\r\n      setComponent([{name: mainPlace, payload: newPayload}])\r\n    }\r\n  })\r\n\r\n  // Подключить аниме и пробовать делать систему.\r\n  return(\r\n    <div className='main'>\r\n       {/* <TransitionGroup>\r\n          {\r\n            component.map(({name, payload}) => (\r\n              <CSSTransition\r\n                key={name}\r\n                timeout={1500}\r\n                classNames=\"item\"\r\n                >\r\n                {payload}  \r\n              </CSSTransition>\r\n            ))\r\n          }\r\n       </TransitionGroup> */}\r\n       {component[0].payload}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(({main: {mainPlace}})=> ({mainPlace}), {openPlace})(Main)\r\n\r\n{/* {component.payload}  */}\r\n{/* <div className='main'>\r\n      <div className={classNames('editor', mainPlace === 'editor' ? 'editor-show' : 'editor-hide')}>\r\n        <Editor />\r\n      </div>\r\n      <div className={classNames('project', mainPlace === 'project' ? 'project-show' : 'project-hide')}>\r\n        <Project isSetup={false} />\r\n      </div>\r\n      <div className={classNames('version', mainPlace === 'version' ? 'version-show' : 'version-hide')}>\r\n        <Version />\r\n      </div>\r\n      <div className={classNames('project', mainPlace === 'setup' ? 'setup-show' : 'setup-hide')}> \r\n        <Project isSetup={true} />\r\n      </div>\r\n      <div className={classNames('beginner', mainPlace === 'beginner' ? 'beginner-show' : 'beginner-hide')}>\r\n        <Button clickHandler={() => openPlace('project')}>CREATE YOUR FIRST PROJECT</Button> \r\n      </div>\r\n      <div className={classNames('social', mainPlace === 'social' ? 'social-show' : 'social-hide')}>\r\n        <Social />\r\n      </div>\r\n      \r\n    </div> */}","import React from 'react'\r\n\r\nimport {Input, NavbarButton, Button} from '@/components'\r\n\r\nconst Navbar_Branch = () => {\r\n  function branchInputHandl(ev) {\r\n    ev.persist()\r\n    console.log('%c%s', 'color: blue; font-size: 12px;', 'EV:', ev)\r\n  }\r\n  function branchSaveHandl(ev) {\r\n    ev.persist();\r\n    console.log('%c%s', 'color: blue; font-size: 12px;', 'EV:', ev)\r\n  }\r\n  function branchShowHandl(ev) {\r\n    ev.persist();\r\n    console.log('%c%s', 'color: blue; font-size: 12px;', 'EV:', ev)\r\n  }\r\n  return(\r\n    <div className='navbar__branch'>\r\n      <div className='navbar__branch_podsInput'>\r\n        <Input \r\n          place=\"navbar\"\r\n          placeholder={'Pods height'} \r\n          changeHandler={branchInputHandl}/>\r\n      </div>\r\n      <div className='navbar__branch_saveBtn' >\r\n        <Button place=\"navbar\">Add</Button>\r\n      </div>\r\n      {/* <NavbarButton \r\n        simbol={\"Add\"}\r\n        clickHandler={branchSaveHandl}\r\n        width={20}/> */}\r\n      <div className='navbar__branch_showBtn'>\r\n        <Button place=\"navbar\">|</Button>\r\n      </div>\r\n      {/* <NavbarButton\r\n        simbol={\"\"}\r\n        clickHandler={branchShowHandl}\r\n        width={5}/> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar_Branch;","// Добавит поля в форму создания. MetaData. Allowed\r\n// Установить поля селектора по дефолту в ноль, и автоматически формироовать список с наиболее используемых\r\n\r\n// БАГ. Не обновляется состояние выбранного проекта, после выброса. Лечится рестартом... Причина скорее\r\n// всего в том, что компоненты не до конца управляемы. Хранят старые состояния...\r\nimport React, {useState, useEffect} from 'react'\r\nimport {connect, batch} from 'react-redux'\r\nimport classNames from 'classnames'\r\n\r\nimport {Input, Button} from '@/components'\r\nimport {Dropdown,Menu} from 'antd'\r\n\r\nimport {mineInd} from '@/utils'\r\n\r\nimport {addProject, openPlace, selectProject, selectVersion, changeMaster} from '@/actions'\r\n\r\nconst Navbar_Main = (\r\n  {\r\n    projects, \r\n    superAccessed,\r\n    isOwner,\r\n    selectProject, \r\n    selectVersion, \r\n    projectId, \r\n    workVersion,\r\n    openPlace,\r\n    changeMaster\r\n  }) => {\r\ndebugger //changeMaster(false)\r\n  //const {projectId, workVersion} = workPCD || {projectId: null, workVersion: null}\r\n  //const [projectsDrop, setProjectsDrop] = useState(null)\r\n  //const [checkData, setCheckData] = useState({cpId: null, cpL: null})\r\n  //const [currentProject, setCurrentProject] = useState(null)\r\n  const [showProjects, setShowProjects] = useState(false);\r\n  \r\n  const [hideDls, setHideDls] = useState(true);\r\n  // function projectsSubmitHandl(ev) {\r\n  //   ev.persist()\r\n  // }\r\n  // function projectsPickHandl(ev) {\r\n  //   ev.persist()\r\n  // }\r\n  // function projectsInputHand(ev) {\r\n  //   ev.persist()\r\n  //   console.log('%c%s', 'color: blue; font-size: 12px;', 'EV:', ev.tarrget.value)\r\n  // }\r\n  // function projectsShowHandl(ev) {\r\n  //   ev.persist()\r\n  //   setShowProjects(!showProjects)\r\n  //   console.log('%c%s', 'color: blue; font-size: 12px;', 'EV:', ev)\r\n  // }\r\n  // function savesShowHandl(ev) {\r\n  //   ev.persist();\r\n  //   console.log('%c%s', 'color: blue; font-size: 12px;', 'EV:', ev)\r\n  // }\r\n  // function mapShowHandl(ev) {\r\n  //   ev.persist();\r\n  //   console.log('%c%s', 'color: blue; font-size: 12px;', 'EV:', ev)\r\n  // }\r\n\r\n\r\n  // function pickElemHandl(ev) {\r\n  //   let key = ev.key;\r\n  //   console.log('Picked project ind: ', key)\r\n  // }\r\n\r\n  debugger\r\n  let projectInd = undefined;\r\n  for(let i=0;i<projects.length;i++) {\r\n    if(projects[i].superId === projectId) {\r\n      projectInd = i;\r\n    }\r\n  };\r\n  let versionInd = undefined;\r\n  if(projectInd !== undefined) {\r\n    for(let i in projects[projectInd].versions) {\r\n      if(projects[projectInd].versions[i].superId === workVersion) {\r\n        versionInd = i;\r\n      }\r\n    }\r\n  }\r\n  // const {cpId, cpL} = checkData; \r\n  // useEffect(() => {\r\n  //   if(projectsDrop === null || cpId !== projectId || cpL !== projects.length) {\r\n  //     const drop = \r\n  //     ;\r\n\r\n  //   batch(() => {\r\n  //     setProjectsDrop(drop);\r\n  //     setCheckData({cpId: projectId, cpL: projects.length})\r\n  //   })\r\n  //   }\r\n  // })\r\n  \r\n\r\n  function makeMenu({data, addHandler, current, selectHandl}) { // ребилдни PCD там должен быть uuid в индикаторе версии\r\n    let itemsArr = data.map(({name, date, superId, comment=false}, i) => {\r\n      return (\r\n        <Menu.Item \r\n          key={superId+''} \r\n          className={classNames(superId === current && 'ant-menu-item-selected')}\r\n          >\r\n          <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n            <span>{comment ? comment : name}</span>\r\n            <span>{date}</span>\r\n          </div>\r\n        </Menu.Item>)\r\n    })\r\n    let curProjectInd = current+'';\r\n    return (\r\n      <div className=\"setuper\" style={{width: '100%', display: \"flex\", flexDirection: 'column'}}>\r\n        {\r\n          isOwner &&\r\n          <div>\r\n            <Button clickHandler={addHandler}>\r\n              ADD NEW\r\n            </Button>\r\n          </div>\r\n        }\r\n        <Menu \r\n          onSelect={selectHandl}\r\n          //defaultSelectedKeys={[curProjectInd]}\r\n          > \r\n          {itemsArr}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className='navbar__mainActions'>\r\n      <div className='navbar__mainActions_projects'>\r\n        <Dropdown \r\n          overlay={makeMenu({\r\n            data: projects, \r\n            addHandler: () => {openPlace('project')}, \r\n            current: projectId,\r\n            selectHandl: (ev) => {selectProject(ev.key); changeMaster(false)}})} \r\n          onVisibleChange={(ev) => console.log('OnVisibleChange', ev)}>\r\n          <div><Input place='navbar' placeholder={(projects.length && projectInd !== undefined) \r\n              ? projects[projectInd].name \r\n              : projects.length\r\n                ? \"Choose some-thing\"\r\n                : \"Let's create some-thing\" } /></div>\r\n        </Dropdown>\r\n      </div>\r\n      <div className='navbar__mainActions_saves'>\r\n        {\r\n         (projects.length && projectInd !== undefined)\r\n         ? <Dropdown \r\n            overlay={makeMenu({\r\n              data:projects[projectInd].versions , \r\n              addHandler: () => {openPlace('version')}, //ребилд | пока норм..\r\n              current: workVersion,\r\n              selectHandl: (ev) => {selectVersion(ev.key); changeMaster(false)}})}>\r\n            <div><Input place='navbar' placeholder={projects[projectInd].versions[versionInd].comment}/></div>\r\n          </Dropdown>\r\n        : <Input place='navbar' placeholder='Nonee'/>\r\n        }\r\n      </div>\r\n      {\r\n        projectId && \r\n        <>  \r\n          {\r\n            superAccessed &&\r\n            <div className='navbar__mainActions_secure'>\r\n              <Button place='navbar' clickHandler={() => openPlace('setup')}>\r\n                Setup\r\n              </Button>\r\n            </div>\r\n          }\r\n          <div className='navbar__mainActions_map'>\r\n            <Button place='navbar' clickHandler={() => openPlace('map')}>\r\n                Map\r\n            </Button> \r\n          </div>\r\n        </>\r\n      }\r\n      \r\n      \r\n    </div>\r\n  )\r\n}\r\n//\r\nexport default connect(\r\n  ({main: {demo_projects, projects, workPCD, workBranch, personObj, workPerson}}) => {\r\n    let superAccessed = false;\r\n\r\n    const checkAccess = accesses => accesses.includes(personObj.userData.superId) || accesses.includes('all');\r\n\r\n    if(workPCD) {\r\n      let projectInd = []; \r\n      mineInd(projects, workPCD.projectId, 'superId', projectInd);\r\n      superAccessed = checkAccess(projects[projectInd[0]].superAccess)\r\n    };\r\n\r\n    return {\r\n      projects: projects.filter(({access}) => checkAccess(access)),\r\n      projectId: workPCD ? workPCD.projectId : null,\r\n      workVersion: workPCD ? workPCD.workVersion : null,\r\n      superAccessed,\r\n      isOwner: workPerson === personObj.userData.superId,\r\n      v: workBranch.v\r\n    }\r\n  }, \r\n  {addProject, openPlace, selectProject, selectVersion, changeMaster})(Navbar_Main)","// Компонент отвечает за возвращение домой, причем, с поднятием новых данных о проектах,\r\n// Если кто-то что-то поменял пока владельца не было дома.\r\n\r\n// Так же здесь будут кнопки для быстрого доступа к проектам друзей\r\n\r\nimport React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport {socket} from '@/core'\r\n\r\nimport {Button} from '@/components'\r\n\r\nimport {openPlace, chooseMe, updateData, choosePerson, changeMaster} from '@/actions'\r\n\r\nconst Navbar_Social = (\r\n  {\r\n  personObj, \r\n  workPerson,\r\n  friends, \r\n  openPlace, \r\n  chooseMe, \r\n  updateData, \r\n  choosePerson, \r\n  changeMaster\r\n}) => {\r\n\r\n\r\n  function chooseMeHanler() {\r\n    let mySuperId = personObj.userData.superId;\r\n    if(workPerson !== mySuperId) {\r\n      socket.emit('GET_USERS_DETAIL', {token: localStorage.token, personId: mySuperId});\r\n      socket.on('NEW_USERS_DETAIL', ({user}) => {\r\n        console.log('HOME_USER:', user);\r\n        if(user.userData.superId === mySuperId) { // возможно эта проверка не нужна\r\n          chooseMe(user.projects)\r\n        }\r\n      })\r\n    } else {\r\n      openPlace('profile')\r\n    }\r\n    //\r\n  }\r\n\r\n  function chooseFriendHandler(personId) {\r\n    socket.emit('SUBSCRIBE_USER', {\r\n      token: localStorage.token, \r\n      personId\r\n    });\r\n    socket.on('NEW_SUBSCRIBE_USER', ({friendObj}) => {\r\n      changeMaster(false);\r\n      updateData({data: friendObj, address: 'friend'});\r\n      choosePerson(personId);\r\n    })\r\n  }\r\n\r\n  const avatarComp = (person, alt, me=false) => person.userData.src \r\n    ? <div className='avatar'><img src=\"\" alt=\"\"/></div>\r\n    : <div className={classNames('avatar_alt',me && 'avatar_alt_me')}> {alt} </div>\r\n\r\n\r\n  return (\r\n    <div className='navbar__social'>\r\n      <div className='navbar__social_fastAccess'>\r\n        {\r\n          friends.length\r\n          ? <div className='friendsList'> \r\n            {friends.slice(0, 6).map((friend) => { /// WTF Если сюда поставить splice то он модифнет state.main. Ору\r\n              debugger\r\n              return <div onClick={() => chooseFriendHandler(friend.userData.superId)}>\r\n                {avatarComp(friend, friend.userData.nickName.substring(0, 2))}\r\n              </div>\r\n            })}\r\n            </div>\r\n          : 'Fast access place...'\r\n        }\r\n        \r\n      </div>\r\n      <div className='navbar__social_details'>\r\n        <Button place='navbar' clickHandler={() => openPlace('social')}>\r\n          Details\r\n        </Button>\r\n      </div>\r\n      <div className='navbar__social_me' onClick={chooseMeHanler}>\r\n        {\r\n          personObj && avatarComp(personObj, 'I', true)\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(({main: {friends, personObj, workPerson}}) => ({friends, personObj, workPerson}), \r\n  {openPlace, chooseMe, updateData, choosePerson, changeMaster})(Navbar_Social);","import React, {lazy} from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {Navbar_Branch, Navbar_Main, Navbar_Social} from './elements'\r\n\r\nimport './Navbar.scss'\r\n\r\nconst Navbar = () => {\r\n  \r\n  return (\r\n    <div className='navbar'>\r\n      <Navbar_Branch />\r\n      <Navbar_Main/>\r\n      <Navbar_Social/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapState = state => {\r\n  console.log(\"STATE:\", state)\r\nreturn {\r\n  state\r\n}\r\n},\r\n\r\nmapDispatch = dispatch => {\r\n  console.log(\"DISPATCH\", dispatch)\r\n  return {\r\n\r\n  }\r\n}\r\nexport default connect(mapState, mapDispatch)(Navbar)","  // нужно организовать точечную модификацию по высоте и хранилище всех подов..\r\nimport React from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {Pod, Button} from '@/components'\r\n\r\nimport {addPod, deletePod, choosePod, changeBranch, changeMaster} from '@/actions'\r\nimport {mineInd} from '@/utils'\r\n\r\nimport './Branch.scss'\r\n\r\nconst Branch = (\r\n  {\r\n    workBranch, \r\n    master,\r\n    workPCD, \r\n    accessed, v, \r\n    addPod, \r\n    deletePod, \r\n    choosePod, \r\n    currentHeight, \r\n    changeBranch, \r\n    changeMaster\r\n  }) => {\r\n\r\n  let resData = workBranch.branch.base\r\n  ? (workBranch.branch.base)\r\n  .concat(workBranch.branch.question ? [workBranch.branch.question] : []) //\r\n  : [];\r\n  // нужно организовать точечную модификацию по высоте и хранилище всех подов..\r\n\r\n  let realResData = resData.map(({coord:{height}, label, main}) => {\r\n    return <Pod \r\n      onAction={podAction}\r\n      readOnly={!accessed} \r\n      actived={currentHeight==height} \r\n      label={label} \r\n      main={main} \r\n      height={height} \r\n      onPlus={addPod}\r\n      onDelete={deletePod}\r\n      onChoose={choosePod}\r\n      showDelete={resData.length > 1}\r\n      />\r\n  })\r\n  const noMaster = master === null\r\n  function podAction() {\r\n    noMaster && changeMaster(true);\r\n  }\r\n  //ebugger\r\n  return(\r\n    <div className='branchWrapper'>\r\n      <div className='branch' >\r\n      {realResData.length > 0\r\n      ? <div className='branch__wrapper'>\r\n          {realResData}\r\n        </div>\r\n      : <div className=\"branch__plug\">\r\n          Projects pods...\r\n        </div>\r\n      }\r\n    \r\n      </div>\r\n      {\r\n      workBranch.pos && workBranch.pos.length > 1 &&\r\n      <div className='branch__goBackPlace'>\r\n        <div className='branch__goBackPlace_button'>\r\n          <Button clickHandler={() => changeBranch('back')} place='navbar'>Cross back</Button>\r\n        </div>\r\n      </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(({main: {workBranch, workPCD, projects, personObj}}) => {\r\n  let accessed = false,\r\n  master = null;\r\n  const nickName = personObj.userData.nickName;\r\n  if(workPCD) {\r\n    let projectInd = [];\r\n    let versionInd = [];\r\n    \r\n    mineInd(projects, workPCD.projectId, 'superId', projectInd);   \r\n    mineInd(projects[projectInd[0]].versions, workPCD.workVersion, 'superId', versionInd);\r\n    master = projects[projectInd[0]].versions[versionInd[0]].master;\r\n\r\n    const targetAccess = projects[projectInd[0]].superAccess;\r\n    if(targetAccess.includes(personObj.userData.superId) || targetAccess.includes('all')) {\r\n      if(master === null || master === nickName) {\r\n        accessed = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    workBranch, \r\n    v: workBranch.v, \r\n    workPCD, \r\n    master,\r\n    currentHeight: workPCD ? workPCD[workPCD.workVersion].height: null,\r\n    accessed\r\n  }\r\n}, {addPod, deletePod, choosePod, changeBranch, changeMaster})(Branch);","import React, {useRef, useEffect, useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport {fetchUserData, userLogin, autoLoginWithToken} from '@/actions'\r\n\r\nimport {Button} from '@/components';\r\n\r\nimport './Login.scss'\r\n\r\nconst Login = ({fetchUserData, userLogin, autoLoginWithToken}) => {\r\n  const login = useRef(null)\r\n  const [show, setShow] = useState(true)\r\n\r\n  useEffect(() => {\r\n    // login.current.addEventListener('transitionend', () => {\r\n    //   console.log('Transition end')\r\n    // })\r\n    // \r\n    debugger\r\n    localStorage.token && autoLoginWithToken()\r\n  })\r\n\r\n  function loginHandl() {\r\n\r\n    //fetchUserData()\r\n    const {nickName, password} = localStorage\r\n    let fakeData = {nickName, password};\r\n    console.log(fakeData)\r\n    userLogin(fakeData)\r\n    setShow(!show)\r\n  }\r\n\r\n  return(\r\n    <div ref={login} className={classNames('login', show ? 'login-show' : 'login-hide')}>\r\n      <Button clickHandler={loginHandl}>\r\n        LOGIN\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(({}) => ({}), {fetchUserData, userLogin, autoLoginWithToken})(Login)\r\n","// у мапы есть выбранный элемент, в котором будет бренч дирекшн дата\r\n// есть инпуты для быстрых перемещений (при огромных вложенностях)\r\n// при выборе проекта или ветви, ворк плейс остается на мапе. Помолимся богу производительности.\r\n\r\n// модифицирование сети это ультра лейт... Легче заново собрать.\r\nimport React, {useState, useEffect, cloneElement} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {boostWorker, WebWorker, mineInd} from '@/utils'\r\n\r\nimport {Leaf} from '@/components'\r\n\r\nimport {setMapData, changeBranch} from '@/actions'\r\n\r\nimport './Map.scss'\r\n\r\n\r\nconst MapBase = ({workPCD, projects, mapStore, mapGrid, mapCurrent, setMapData, workPos, changeBranch}) => {\r\n  const [main, setMain] = useState([])\r\n  debugger\r\n  useEffect(() => {\r\n\r\n    if(mapStore == false) { // новые данные, мапы ликвидированы\r\n\r\n      const worker = new WebWorker(boostWorker);\r\n      \r\n      let projectInd = [];\r\n      mineInd(projects, workPCD.projectId, 'superId', projectInd)\r\n      let versionInd = [];\r\n      mineInd(projects[projectInd[0]].versions, workPCD.workVersion, 'superId', versionInd)\r\n      \r\n      let natVersion = projects[projectInd[0]].versions[versionInd[0]].data;\r\n\r\n      // Делаю фабрику, при создании компонента прилетает мапина дата (массив с React элементами)\r\n      //, а так же сам Грид, если доживают до этого момента)) при их существовании, происходит поиск местоположения\r\n      // старого по выбранности элемента и нового ---> происходит модификация и ресборка МАПЫ. Привет шашки)\r\n\r\n      worker.onmessage = function(ev) {\r\n        console.log(\"WD:\", ev.data);\r\n        \r\n        let mapCurrent = workPos;\r\n        let mapGrid = ev.data.grid.slice();\r\n        let mapStore = ev.data.grid.map((line, h) => {\r\n          return line.map(({data}) => {\r\n            return <Leaf clickHandler={() => changeBranch(data.pos)} data={data} current={(data?.pos ?? null) === mapCurrent} />\r\n          })\r\n        });\r\n        debugger;\r\n        console.timeEnd()\r\n        setMapData({mapGrid, mapStore, mapCurrent})\r\n        setMain(mapStore.map(line => (<div className='map__line'>{line}</div>)))\r\n  \r\n        //setMain(main);\r\n      }\r\n      // прогон данных проекта и навешивание высот c выводом в виде 2D []\r\n      console.time()\r\n      worker.postMessage(natVersion);\r\n      \r\n    } else if(mapCurrent !== workPos) { // модификация существующих мап и диспатч новых данных СБОРА НЕТ\r\n      let oldCoord = {};\r\n      let newCoord = {}; // Поиск координат и модификация по их адресам\r\n      mapGrid.forEach((line, h) => {\r\n        line.forEach(({data}, l) => {\r\n          if(data?.pos === workPos) {\r\n            newCoord = {h, l}\r\n          }\r\n          if(data?.pos === mapCurrent) {\r\n            oldCoord = {h, l}\r\n          }\r\n        })\r\n      })\r\n      const {h: oH, l: oL} = oldCoord; const {h: nH, l: nL} = newCoord;\r\n      mapStore[oH][oL] = cloneElement(mapStore[oH][oL], {current: false});\r\n      mapStore[nH][nL] = cloneElement(mapStore[nH][nL], {current: true});\r\n      setMapData({mapGrid, mapStore, mapCurrent: workPos});\r\n      setMain(mapStore.map(line => (<div className='map__line'>{line}</div>)))\r\n    }  // если скидываются данные, все должно просто перерисоваться, до нового скидывания)\r\n  })\r\n\r\n  return (\r\n    <div className='map'>\r\n      <div className='map__top'>\r\n        <div className='map__top_space'>\r\n\r\n        </div>\r\n        <div className='map__top_mainPart'>\r\n         \r\n          <div className='map__top_mainPart_wrapper'>\r\n            <div className='map__top_mainPart_space'></div>\r\n            <div className='map__top_mainPart_wrapper_row'>\r\n              <div> {main}</div>\r\n              <div className='map__top_mainPart_space_row'>\r\n\r\n              </div>\r\n            </div>\r\n            {/* <div className='plug'>\r\n              2\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n        <div className='map__top_space'>\r\n\r\n        </div>\r\n      </div>\r\n      <div className='map__bottom'>\r\n        <div className='map__bottom_space'>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(({main: {workPCD, projects, mapStore, mapGrid, mapCurrent}}) => ({\r\n  workPCD, projects, mapStore, mapGrid, mapCurrent, workPos: workPCD[workPCD.workVersion].path,\r\n}), {setMapData, changeBranch})(MapBase) ;\r\n","// докинь нормальных анимация перехода с логина на рп\r\nimport React, { useState, useEffect, Suspense }  from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {socket} from '@/core';\r\n\r\nimport {Button} from '@/components'\r\nimport {Branch, Notes, Navbar, Map, Main, Login} from '@/containers' //Login as DefLogin\r\n\r\nimport './Base.scss';\r\n//const isMobile = /Mobile|webOS|BlackBerry|IEMobile|MeeGo|mini|Fennec|Windows Phone|Android|iPad|od|hone)/i.test(navigator.userAgent);\r\n//const Login = React.lazy(() => import('@/containers/Login'));\r\nconst Base = ({projects, mainPlace}) => {\r\n   //const [login, setLogin] = useState({setted: false, payload: null});\r\n   const [showLazy, setShowLazy] = useState(false);\r\n  // console.log('DEBUG', projects) //<Login />\r\n  // const isMobile = /Mobile|webOS|BlackBerry|IEMobile|MeeGo|mini|Fennec|Windows Phone|Android|iP(ad|od|hone)/i.test(navigator.userAgent);\r\n  \r\n  // useEffect(() => {\r\n  //   let saveProject = JSON.stringify(Login);\r\n  //   console.log('STRINGIFY_LOGIN:', saveProject)\r\n  //   if(!login.setted) {\r\n  //     if(!isMobile) {\r\n  //       setLogin({payload: <Suspense fallback={<p></p>}><Login /></Suspense>, setted: true});\r\n  //     } else {\r\n\r\n  //     }\r\n  //   }\r\n  // })\r\n    // return(\r\n    //   <>\r\n    //     {\r\n    //       showLazy \r\n    //       ? <Suspense fallback={null}><Login /></Suspense>\r\n    //       : <div>PLUG</div>\r\n    //     }\r\n    //     <Button clickHandler={() => setShowLazy(!showLazy)}>Change</Button>\r\n    //   </>\r\n    // )\r\n\r\n   \r\n\r\n  return(\r\n    <>\r\n      {\r\n        projects \r\n      ?\r\n        <section className='base'>\r\n          <Navbar />\r\n          <div className='base__mainPart'>\r\n            <Branch />\r\n            <div className='base__workPlace'>\r\n                {\r\n                  mainPlace === 'map'\r\n                  ? <Map />\r\n                  : <>\r\n                      <Suspense fallback={null}><Main /></Suspense>\r\n                      <Notes />\r\n                    </>\r\n                }\r\n                </div>\r\n          </div>\r\n        </section>\r\n      :\r\n        <section className='auth'>\r\n          <Login />\r\n        </section>\r\n      }\r\n    </>\r\n  )\r\n  \r\n  \r\n}\r\n\r\nexport default connect(({main: {projects, mainPlace}}) => ({projects, mainPlace}), {})(Base)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport store from '@/store'\r\n\r\nimport { Base } from '@/pages';\r\n\r\nimport '@/styles/index.scss';\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n  <Base />\r\n</Provider>, \r\ndocument.querySelector('#root'));\r\nserviceWorker.unregister();"],"sourceRoot":""}